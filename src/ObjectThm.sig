(* ========================================================================= *)
(* THEOREM OBJECTS                                                           *)
(* Copyright (c) 2011 Joe Hurd, distributed under the GNU GPL version 2      *)
(* ========================================================================= *)

signature ObjectThm =
sig

(* ------------------------------------------------------------------------- *)
(* A type of theorem objects.                                                *)
(* ------------------------------------------------------------------------- *)

datatype thm =
    Thm of
      {proof : ObjectProv.object,
       hyp : ObjectProv.object,
       concl : ObjectProv.object}

(* ------------------------------------------------------------------------- *)
(* Converting to a real theorem.                                             *)
(* ------------------------------------------------------------------------- *)

val thm : thm -> Thm.thm

(* ------------------------------------------------------------------------- *)
(* Mapping over theorem objects.                                             *)
(* ------------------------------------------------------------------------- *)

val maps :
    (ObjectProv.object -> 's -> ObjectProv.object option * 's) ->
    thm -> 's -> thm option * 's

(* ------------------------------------------------------------------------- *)
(* Eliminate unwanted subterms.                                              *)
(* ------------------------------------------------------------------------- *)

val sharingEliminateUnwanted :
    thm -> ObjectUnwanted.eliminate -> thm option * ObjectUnwanted.eliminate

(* ------------------------------------------------------------------------- *)
(* Pretty printing.                                                          *)
(* ------------------------------------------------------------------------- *)

val pp : thm Print.pp

(* ------------------------------------------------------------------------- *)
(* A total order.                                                            *)
(* ------------------------------------------------------------------------- *)

val compare : thm * thm -> order

end
