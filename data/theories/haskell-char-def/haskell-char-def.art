"Data.Bool./\\"
const
"->"
typeOp
0
def
"bool"
typeOp
nil
opType
1
def
0
ref
1
ref
1
ref
nil
cons
2
def
cons
opType
3
def
nil
cons
cons
opType
4
def
constTerm
5
def
"Data.Bool.!"
const
6
def
0
ref
0
ref
"Haskell.Data.Unicode.Plane"
"Haskell.Data.Unicode.planeFromHol"
"Haskell.Data.Unicode.planeToHol"
nil
"="
const
7
def
4
ref
constTerm
8
def
"Data.Bool.?"
const
9
def
0
ref
0
ref
"Data.Char.plane"
typeOp
nil
opType
10
def
2
ref
cons
opType
11
def
2
ref
cons
opType
12
def
constTerm
"x"
10
ref
var
13
def
"Data.Bool.T"
const
1
ref
constTerm
14
def
absTerm
15
def
appTerm
appTerm
refl
"p"
11
ref
var
16
def
16
remove
varTerm
17
def
"select"
const
18
def
0
ref
11
ref
10
ref
nil
cons
19
def
cons
opType
constTerm
17
remove
appTerm
appTerm
absTerm
15
ref
appTerm
betaConv
appThm
"A"
19
ref
cons
nil
cons
nil
nil
cons
20
def
cons
21
def
nil
7
ref
0
ref
0
ref
0
ref
"A"
varType
22
def
2
ref
cons
opType
23
def
2
ref
cons
opType
24
def
0
ref
24
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
25
def
9
ref
24
ref
constTerm
26
def
appTerm
"p"
23
ref
var
27
def
27
ref
varTerm
28
def
18
ref
0
ref
23
ref
22
ref
nil
cons
cons
opType
constTerm
28
ref
appTerm
appTerm
absTerm
appTerm
axiom
29
def
subst
15
ref
refl
appThm
eqMp
21
ref
8
ref
refl
30
def
"t"
1
ref
var
31
def
8
ref
26
ref
"x"
22
remove
var
32
def
31
ref
varTerm
33
def
absTerm
appTerm
appTerm
33
ref
appTerm
absTerm
34
def
14
ref
appTerm
35
def
betaConv
nil
6
ref
0
ref
3
ref
2
ref
cons
opType
36
def
constTerm
37
def
34
ref
appTerm
38
def
axiom
39
def
nil
"p"
1
ref
var
40
def
38
remove
nil
cons
cons
"q"
1
ref
var
41
def
35
remove
nil
cons
cons
nil
cons
cons
nil
cons
cons
30
ref
8
ref
"Data.Bool.==>"
const
4
ref
constTerm
42
def
40
ref
varTerm
43
def
appTerm
41
ref
varTerm
44
def
appTerm
45
def
appTerm
refl
8
ref
40
ref
41
ref
8
ref
5
ref
43
ref
appTerm
46
def
44
ref
appTerm
47
def
appTerm
48
def
43
ref
appTerm
absTerm
49
def
absTerm
50
def
43
ref
appTerm
51
def
44
ref
appTerm
appTerm
refl
49
remove
44
ref
appTerm
betaConv
appThm
51
remove
betaConv
44
ref
refl
52
def
appThm
eqMp
appThm
nil
7
ref
0
ref
4
ref
0
ref
4
ref
2
ref
cons
opType
53
def
nil
cons
cons
opType
constTerm
54
def
42
remove
appTerm
50
remove
appTerm
axiom
43
ref
refl
55
def
appThm
52
ref
appThm
eqMp
56
def
appThm
45
ref
refl
57
def
appThm
57
remove
eqMp
58
def
30
ref
48
remove
refl
41
ref
7
ref
0
ref
53
ref
0
ref
53
remove
2
ref
cons
opType
nil
cons
cons
opType
constTerm
59
def
"f"
4
remove
var
60
def
60
ref
varTerm
61
def
43
ref
appTerm
44
ref
appTerm
absTerm
62
def
appTerm
60
ref
61
ref
14
ref
appTerm
14
ref
appTerm
absTerm
63
def
appTerm
absTerm
64
def
44
ref
appTerm
betaConv
appThm
7
ref
0
ref
3
ref
36
remove
nil
cons
cons
opType
constTerm
65
def
46
remove
appTerm
refl
40
ref
64
remove
absTerm
66
def
43
ref
appTerm
betaConv
appThm
nil
54
remove
5
ref
appTerm
66
ref
appTerm
axiom
67
def
55
remove
appThm
eqMp
52
ref
appThm
eqMp
68
def
appThm
47
ref
refl
69
def
appThm
69
ref
eqMp
60
ref
61
ref
refl
nil
31
ref
43
ref
nil
cons
70
def
cons
nil
cons
nil
cons
cons
30
ref
8
ref
33
ref
appTerm
14
ref
appTerm
assume
appThm
33
ref
refl
71
def
appThm
71
remove
eqMp
nil
14
ref
axiom
72
def
eqMp
33
ref
assume
72
ref
deductAntisym
deductAntisym
73
def
subst
43
ref
assume
74
def
eqMp
appThm
nil
31
ref
44
ref
nil
cons
75
def
cons
nil
cons
nil
cons
cons
73
ref
subst
44
ref
assume
eqMp
appThm
absThm
eqMp
76
def
nil
"P"
1
ref
var
77
def
70
remove
cons
"Q"
1
ref
var
78
def
75
remove
cons
nil
cons
cons
nil
cons
cons
30
ref
30
ref
8
ref
60
ref
61
remove
77
ref
varTerm
79
def
appTerm
80
def
78
ref
varTerm
81
def
appTerm
absTerm
40
ref
41
ref
43
ref
absTerm
absTerm
82
def
appTerm
83
def
appTerm
refl
8
ref
82
ref
79
ref
appTerm
84
def
81
ref
appTerm
appTerm
refl
41
ref
79
ref
absTerm
81
ref
appTerm
betaConv
appThm
84
remove
betaConv
81
ref
refl
85
def
appThm
eqMp
appThm
83
remove
betaConv
eqMp
appThm
8
ref
63
ref
82
ref
appTerm
86
def
appTerm
refl
8
ref
82
ref
14
ref
appTerm
87
def
14
ref
appTerm
appTerm
refl
41
ref
14
ref
absTerm
14
ref
appTerm
betaConv
appThm
87
remove
betaConv
14
ref
refl
88
def
appThm
eqMp
appThm
86
remove
betaConv
eqMp
appThm
8
ref
5
ref
79
ref
appTerm
89
def
81
ref
appTerm
90
def
appTerm
refl
41
ref
59
remove
60
remove
80
remove
44
ref
appTerm
absTerm
appTerm
63
ref
appTerm
absTerm
81
remove
appTerm
betaConv
appThm
65
remove
89
remove
appTerm
refl
66
remove
79
ref
appTerm
betaConv
appThm
67
remove
79
remove
refl
91
def
appThm
eqMp
85
remove
appThm
eqMp
90
remove
assume
eqMp
82
remove
refl
appThm
eqMp
appThm
91
ref
appThm
91
remove
eqMp
72
ref
eqMp
92
def
subst
deductAntisym
eqMp
30
ref
56
remove
45
remove
assume
eqMp
appThm
69
ref
appThm
69
remove
eqMp
74
remove
eqMp
93
def
30
ref
30
ref
8
ref
62
remove
40
ref
41
ref
44
ref
absTerm
94
def
absTerm
95
def
appTerm
96
def
appTerm
refl
8
ref
95
ref
43
remove
appTerm
97
def
44
ref
appTerm
appTerm
refl
94
ref
44
remove
appTerm
betaConv
appThm
97
remove
betaConv
52
ref
appThm
eqMp
appThm
96
remove
betaConv
eqMp
appThm
8
ref
63
remove
95
ref
appTerm
98
def
appTerm
refl
8
ref
95
ref
14
ref
appTerm
99
def
14
ref
appTerm
appTerm
refl
94
remove
14
ref
appTerm
betaConv
appThm
99
remove
betaConv
88
remove
appThm
eqMp
appThm
98
remove
betaConv
eqMp
appThm
68
remove
47
remove
assume
eqMp
95
remove
refl
appThm
eqMp
appThm
52
ref
appThm
52
remove
eqMp
72
ref
eqMp
100
def
deductAntisym
93
remove
eqMp
deductAntisym
101
def
subst
deductAntisym
39
remove
eqMp
"A"
2
ref
cons
nil
cons
102
def
"P"
3
remove
var
103
def
34
remove
nil
cons
cons
"x"
1
remove
var
104
def
14
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
nil
40
ref
6
ref
24
ref
constTerm
105
def
"P"
23
ref
var
varTerm
106
def
appTerm
107
def
nil
cons
108
def
cons
41
ref
106
ref
32
ref
varTerm
109
def
appTerm
110
def
nil
cons
111
def
cons
nil
cons
cons
nil
cons
cons
112
def
58
remove
subst
112
remove
100
remove
76
remove
deductAntisym
113
def
subst
30
ref
8
ref
110
ref
appTerm
refl
32
remove
14
ref
absTerm
114
def
109
ref
appTerm
betaConv
appThm
27
remove
7
ref
0
ref
23
remove
24
remove
nil
cons
cons
opType
constTerm
28
remove
appTerm
114
ref
appTerm
absTerm
115
def
106
ref
appTerm
betaConv
116
def
nil
25
remove
105
remove
appTerm
115
remove
appTerm
axiom
106
remove
refl
appThm
117
def
107
ref
assume
eqMp
eqMp
109
remove
refl
appThm
eqMp
appThm
110
remove
refl
118
def
appThm
118
remove
eqMp
72
ref
eqMp
eqMp
nil
77
remove
108
remove
cons
78
remove
111
remove
cons
nil
cons
cons
nil
cons
cons
92
remove
subst
deductAntisym
eqMp
119
def
subst
eqMp
eqMp
appThm
26
remove
114
remove
appTerm
refl
120
def
appThm
120
remove
eqMp
72
remove
eqMp
121
def
subst
eqMp
defineTypeOp
122
def
pop
123
def
pop
124
def
pop
125
def
pop
nil
opType
126
def
2
ref
cons
opType
127
def
2
ref
cons
opType
constTerm
128
def
"a"
126
ref
var
129
def
7
ref
0
ref
126
ref
127
ref
nil
cons
cons
opType
130
def
constTerm
131
def
125
remove
0
ref
10
ref
126
ref
nil
cons
132
def
cons
opType
133
def
constTerm
134
def
124
remove
0
ref
126
ref
19
ref
cons
opType
135
def
constTerm
136
def
129
ref
varTerm
137
def
appTerm
appTerm
appTerm
137
remove
appTerm
138
def
absTerm
139
def
appTerm
140
def
appTerm
refl
6
ref
12
remove
constTerm
141
def
refl
"r"
10
ref
var
142
def
nil
31
ref
7
ref
0
ref
10
ref
11
ref
nil
cons
cons
opType
constTerm
143
def
136
ref
134
ref
142
ref
varTerm
144
def
appTerm
appTerm
appTerm
144
ref
appTerm
145
def
nil
cons
cons
nil
cons
nil
cons
cons
31
ref
8
ref
8
ref
14
ref
appTerm
146
def
33
ref
appTerm
appTerm
33
ref
appTerm
absTerm
147
def
33
ref
appTerm
148
def
betaConv
nil
37
remove
147
ref
appTerm
149
def
axiom
150
def
nil
40
ref
149
remove
nil
cons
cons
41
ref
148
remove
nil
cons
cons
nil
cons
cons
nil
cons
cons
101
remove
subst
deductAntisym
150
remove
eqMp
102
remove
103
remove
147
remove
nil
cons
cons
104
remove
33
remove
nil
cons
cons
nil
cons
cons
nil
cons
cons
119
remove
subst
eqMp
eqMp
151
def
subst
absThm
appThm
appThm
nil
"P"
127
remove
var
139
remove
nil
cons
cons
nil
cons
nil
cons
cons
"A"
132
ref
cons
nil
cons
20
ref
cons
30
ref
8
ref
107
ref
appTerm
refl
116
remove
appThm
117
remove
eqMp
appThm
107
remove
refl
152
def
appThm
152
remove
eqMp
153
def
subst
subst
129
remove
nil
31
ref
138
remove
nil
cons
cons
nil
cons
nil
cons
cons
73
ref
subst
123
remove
eqMp
absThm
eqMp
154
def
nil
40
ref
140
remove
nil
cons
cons
41
ref
141
ref
142
ref
146
ref
145
ref
appTerm
155
def
absTerm
156
def
appTerm
nil
cons
cons
nil
cons
cons
nil
cons
cons
113
ref
subst
deductAntisym
154
remove
eqMp
nil
"P"
11
remove
var
156
remove
nil
cons
cons
nil
cons
nil
cons
cons
21
remove
153
ref
subst
subst
142
remove
nil
31
ref
155
remove
nil
cons
cons
nil
cons
nil
cons
cons
73
ref
subst
30
ref
15
remove
144
remove
appTerm
betaConv
appThm
145
remove
refl
appThm
122
remove
eqMp
eqMp
absThm
eqMp
eqMp
eqMp
nil
5
ref
128
remove
"h"
126
ref
var
157
def
131
ref
134
ref
136
ref
157
remove
varTerm
158
def
appTerm
appTerm
appTerm
158
remove
appTerm
absTerm
appTerm
appTerm
141
remove
13
ref
143
remove
136
ref
134
ref
13
remove
varTerm
159
def
appTerm
appTerm
appTerm
159
remove
appTerm
absTerm
appTerm
appTerm
thm
5
ref
6
ref
0
ref
0
ref
"Haskell.Data.Unicode.Position"
"Haskell.Data.Unicode.positionFromHol"
"Haskell.Data.Unicode.positionToHol"
nil
8
ref
9
ref
0
ref
0
ref
"Data.Char.position"
typeOp
nil
opType
160
def
2
ref
cons
opType
161
def
2
ref
cons
opType
162
def
constTerm
"x"
160
ref
var
163
def
14
ref
absTerm
164
def
appTerm
appTerm
refl
"p"
161
ref
var
165
def
165
remove
varTerm
166
def
18
ref
0
ref
161
ref
160
ref
nil
cons
167
def
cons
opType
constTerm
166
remove
appTerm
appTerm
absTerm
164
ref
appTerm
betaConv
appThm
"A"
167
ref
cons
nil
cons
20
ref
cons
168
def
29
ref
subst
164
ref
refl
appThm
eqMp
168
ref
121
ref
subst
eqMp
defineTypeOp
169
def
pop
170
def
pop
171
def
pop
172
def
pop
nil
opType
173
def
2
ref
cons
opType
174
def
2
ref
cons
opType
constTerm
175
def
"a"
173
ref
var
176
def
7
ref
0
ref
173
ref
174
ref
nil
cons
cons
opType
177
def
constTerm
178
def
172
remove
0
ref
160
ref
173
ref
nil
cons
179
def
cons
opType
180
def
constTerm
181
def
171
remove
0
ref
173
ref
167
ref
cons
opType
182
def
constTerm
183
def
176
ref
varTerm
184
def
appTerm
appTerm
appTerm
184
remove
appTerm
185
def
absTerm
186
def
appTerm
187
def
appTerm
refl
6
ref
162
remove
constTerm
188
def
refl
"r"
160
ref
var
189
def
nil
31
ref
7
ref
0
ref
160
ref
161
ref
nil
cons
cons
opType
constTerm
190
def
183
ref
181
ref
189
ref
varTerm
191
def
appTerm
appTerm
appTerm
191
ref
appTerm
192
def
nil
cons
cons
nil
cons
nil
cons
cons
151
ref
subst
absThm
appThm
appThm
nil
"P"
174
remove
var
186
remove
nil
cons
cons
nil
cons
nil
cons
cons
"A"
179
ref
cons
nil
cons
20
ref
cons
153
ref
subst
subst
176
remove
nil
31
ref
185
remove
nil
cons
cons
nil
cons
nil
cons
cons
73
ref
subst
170
remove
eqMp
absThm
eqMp
193
def
nil
40
ref
187
remove
nil
cons
cons
41
ref
188
ref
189
ref
146
ref
192
ref
appTerm
194
def
absTerm
195
def
appTerm
nil
cons
cons
nil
cons
cons
nil
cons
cons
113
ref
subst
deductAntisym
193
remove
eqMp
nil
"P"
161
remove
var
195
remove
nil
cons
cons
nil
cons
nil
cons
cons
168
remove
153
ref
subst
subst
189
remove
nil
31
ref
194
remove
nil
cons
cons
nil
cons
nil
cons
cons
73
ref
subst
30
ref
164
remove
191
remove
appTerm
betaConv
appThm
192
remove
refl
appThm
169
remove
eqMp
eqMp
absThm
eqMp
eqMp
eqMp
nil
5
ref
175
remove
"h"
173
ref
var
196
def
178
ref
181
ref
183
ref
196
remove
varTerm
197
def
appTerm
appTerm
appTerm
197
remove
appTerm
absTerm
appTerm
appTerm
188
remove
163
ref
190
remove
183
ref
181
ref
163
remove
varTerm
198
def
appTerm
appTerm
appTerm
198
remove
appTerm
absTerm
appTerm
appTerm
thm
5
ref
6
ref
0
ref
0
ref
"Haskell.Data.Unicode.Unicode"
"Haskell.Data.Unicode.fromHol"
"Haskell.Data.Unicode.toHol"
nil
8
remove
9
remove
0
ref
0
ref
"Data.Char.char"
typeOp
nil
opType
199
def
2
ref
cons
opType
200
def
2
ref
cons
opType
201
def
constTerm
"x"
199
ref
var
202
def
14
remove
absTerm
203
def
appTerm
appTerm
refl
"p"
200
ref
var
204
def
204
remove
varTerm
205
def
18
remove
0
ref
200
ref
199
ref
nil
cons
206
def
cons
opType
constTerm
205
remove
appTerm
appTerm
absTerm
203
ref
appTerm
betaConv
appThm
"A"
206
ref
cons
nil
cons
20
ref
cons
207
def
29
remove
subst
203
ref
refl
appThm
eqMp
207
ref
121
remove
subst
eqMp
defineTypeOp
208
def
pop
209
def
pop
210
def
pop
211
def
pop
nil
opType
212
def
2
ref
cons
opType
213
def
2
ref
cons
opType
constTerm
214
def
"a"
212
ref
var
215
def
7
ref
0
ref
212
ref
213
ref
nil
cons
cons
opType
216
def
constTerm
217
def
211
remove
0
ref
199
ref
212
ref
nil
cons
218
def
cons
opType
219
def
constTerm
220
def
210
remove
0
ref
212
ref
206
ref
cons
opType
221
def
constTerm
222
def
215
ref
varTerm
223
def
appTerm
appTerm
appTerm
223
remove
appTerm
224
def
absTerm
225
def
appTerm
226
def
appTerm
refl
6
remove
201
remove
constTerm
227
def
refl
"r"
199
ref
var
228
def
nil
31
ref
7
ref
0
ref
199
ref
200
ref
nil
cons
cons
opType
constTerm
229
def
222
ref
220
ref
228
ref
varTerm
230
def
appTerm
appTerm
appTerm
230
ref
appTerm
231
def
nil
cons
cons
nil
cons
nil
cons
cons
151
remove
subst
absThm
appThm
appThm
nil
"P"
213
remove
var
225
remove
nil
cons
cons
nil
cons
nil
cons
cons
"A"
218
ref
cons
nil
cons
20
remove
cons
153
ref
subst
subst
215
remove
nil
31
ref
224
remove
nil
cons
cons
nil
cons
nil
cons
cons
73
ref
subst
209
remove
eqMp
absThm
eqMp
232
def
nil
40
remove
226
remove
nil
cons
cons
41
remove
227
ref
228
ref
146
remove
231
ref
appTerm
233
def
absTerm
234
def
appTerm
nil
cons
cons
nil
cons
cons
nil
cons
cons
113
remove
subst
deductAntisym
232
remove
eqMp
nil
"P"
200
remove
var
234
remove
nil
cons
cons
nil
cons
nil
cons
cons
207
remove
153
remove
subst
subst
228
remove
nil
31
remove
233
remove
nil
cons
cons
nil
cons
nil
cons
cons
73
remove
subst
30
remove
203
remove
230
remove
appTerm
betaConv
appThm
231
remove
refl
appThm
208
remove
eqMp
eqMp
absThm
eqMp
eqMp
eqMp
nil
5
remove
214
remove
"h"
212
ref
var
235
def
217
ref
220
ref
222
ref
235
remove
varTerm
236
def
appTerm
appTerm
appTerm
236
remove
appTerm
absTerm
appTerm
appTerm
227
remove
202
ref
229
remove
222
ref
220
ref
202
remove
varTerm
237
def
appTerm
appTerm
appTerm
237
remove
appTerm
absTerm
appTerm
appTerm
thm
"Haskell.Data.Unicode.equalPlane"
131
ref
defineConst
238
def
pop
239
def
pop
238
remove
nil
7
ref
0
ref
130
ref
0
ref
130
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
239
remove
130
remove
constTerm
appTerm
131
remove
appTerm
thm
"Haskell.Data.Unicode.Plane"
"Function.mapRange"
const
240
def
0
ref
133
ref
0
ref
0
ref
"Data.Byte.byte"
typeOp
nil
opType
241
def
19
remove
cons
opType
242
def
0
ref
241
ref
132
remove
cons
opType
243
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
134
ref
appTerm
"Data.Char.mkPlane"
const
242
remove
constTerm
appTerm
244
def
defineConst
245
def
pop
246
def
pop
245
remove
nil
7
ref
0
ref
243
ref
0
ref
243
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
246
remove
243
remove
constTerm
appTerm
244
remove
appTerm
thm
"Haskell.Data.Unicode.unPlane"
"Function.mapDomain"
const
247
def
0
ref
135
ref
0
ref
0
ref
10
ref
241
ref
nil
cons
248
def
cons
opType
249
def
0
ref
126
ref
248
ref
cons
opType
250
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
136
ref
appTerm
"Data.Char.destPlane"
const
249
remove
constTerm
appTerm
251
def
defineConst
252
def
pop
253
def
pop
252
remove
nil
7
ref
0
ref
250
ref
0
ref
250
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
253
remove
250
remove
constTerm
appTerm
251
remove
appTerm
thm
"Haskell.Data.Unicode.planeFromRandom"
240
ref
0
ref
0
ref
"Data.Pair.*"
typeOp
254
def
10
ref
"Probability.Random.random"
typeOp
nil
opType
255
def
nil
cons
256
def
cons
opType
257
def
254
ref
126
ref
256
ref
cons
opType
nil
cons
258
def
cons
opType
259
def
0
ref
0
ref
255
ref
257
remove
nil
cons
cons
opType
260
def
0
ref
255
ref
258
remove
cons
opType
261
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
"Data.Pair.mapFst"
const
262
def
0
ref
133
ref
259
remove
nil
cons
cons
opType
constTerm
134
ref
appTerm
appTerm
"Data.Char.planeFromRandom"
const
260
remove
constTerm
appTerm
263
def
defineConst
264
def
pop
265
def
pop
264
remove
nil
7
ref
0
ref
261
ref
0
ref
261
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
265
remove
261
remove
constTerm
appTerm
263
remove
appTerm
thm
"Haskell.Data.Unicode.equalPosition"
178
ref
defineConst
266
def
pop
267
def
pop
266
remove
nil
7
ref
0
ref
177
ref
0
ref
177
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
267
remove
177
remove
constTerm
appTerm
178
remove
appTerm
thm
"Haskell.Data.Unicode.Position"
240
ref
0
ref
180
ref
0
ref
0
ref
"Data.Word16.word16"
typeOp
nil
opType
268
def
167
ref
cons
opType
269
def
0
ref
268
ref
179
ref
cons
opType
270
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
181
ref
appTerm
"Data.Char.mkPosition"
const
269
remove
constTerm
appTerm
271
def
defineConst
272
def
pop
273
def
pop
272
remove
nil
7
ref
0
ref
270
ref
0
ref
270
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
273
remove
270
remove
constTerm
appTerm
271
remove
appTerm
thm
"Haskell.Data.Unicode.unPosition"
247
ref
0
ref
182
ref
0
ref
0
ref
160
ref
268
remove
nil
cons
274
def
cons
opType
275
def
0
ref
173
ref
274
remove
cons
opType
276
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
183
ref
appTerm
"Data.Char.destPosition"
const
275
remove
constTerm
appTerm
277
def
defineConst
278
def
pop
279
def
pop
278
remove
nil
7
ref
0
ref
276
ref
0
ref
276
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
279
remove
276
remove
constTerm
appTerm
277
remove
appTerm
thm
"Haskell.Data.Unicode.positionFromRandom"
240
ref
0
ref
0
ref
254
ref
160
remove
256
ref
cons
opType
280
def
254
ref
173
remove
256
ref
cons
opType
nil
cons
281
def
cons
opType
282
def
0
ref
0
ref
255
ref
280
remove
nil
cons
cons
opType
283
def
0
ref
255
ref
281
remove
cons
opType
284
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
262
ref
0
ref
180
ref
282
remove
nil
cons
cons
opType
constTerm
181
ref
appTerm
appTerm
"Data.Char.positionFromRandom"
const
283
remove
constTerm
appTerm
285
def
defineConst
286
def
pop
287
def
pop
286
remove
nil
7
ref
0
ref
284
ref
0
ref
284
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
287
remove
284
remove
constTerm
appTerm
285
remove
appTerm
thm
"Haskell.Data.Unicode.equal"
217
ref
defineConst
288
def
pop
289
def
pop
288
remove
nil
7
ref
0
ref
216
ref
0
ref
216
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
289
remove
216
remove
constTerm
appTerm
217
remove
appTerm
thm
"Haskell.Data.Unicode.Unicode"
"Function.o"
const
290
def
0
ref
0
ref
0
ref
254
ref
126
ref
179
remove
cons
opType
291
def
206
ref
cons
opType
292
def
0
ref
291
ref
218
ref
cons
opType
293
def
nil
cons
294
def
cons
opType
295
def
0
ref
0
ref
0
ref
254
ref
10
remove
167
ref
cons
opType
296
def
206
ref
cons
opType
297
def
292
remove
nil
cons
cons
opType
298
def
0
ref
297
ref
294
remove
cons
opType
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
219
ref
295
remove
nil
cons
cons
opType
constTerm
220
ref
appTerm
appTerm
247
ref
0
ref
0
ref
291
ref
296
ref
nil
cons
299
def
cons
opType
300
def
298
remove
nil
cons
cons
opType
constTerm
290
ref
0
ref
0
ref
254
ref
126
remove
167
remove
cons
opType
301
def
299
ref
cons
opType
302
def
0
ref
0
ref
291
ref
301
ref
nil
cons
303
def
cons
opType
304
def
300
remove
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
262
ref
0
ref
135
remove
302
remove
nil
cons
cons
opType
constTerm
136
remove
appTerm
appTerm
"Data.Pair.mapSnd"
const
305
def
0
ref
182
remove
304
remove
nil
cons
cons
opType
constTerm
183
remove
appTerm
appTerm
appTerm
appTerm
"Data.Char.mkChar"
const
297
remove
constTerm
appTerm
306
def
defineConst
307
def
pop
308
def
pop
307
remove
nil
7
ref
0
ref
293
ref
0
ref
293
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
308
remove
293
remove
constTerm
appTerm
306
remove
appTerm
thm
"Haskell.Data.Unicode.unUnicode"
290
ref
0
ref
0
ref
0
ref
212
ref
299
ref
cons
opType
309
def
0
ref
212
ref
291
remove
nil
cons
310
def
cons
opType
311
def
nil
cons
312
def
cons
opType
313
def
0
ref
0
ref
0
ref
199
ref
299
remove
cons
opType
314
def
309
remove
nil
cons
cons
opType
315
def
0
ref
314
ref
312
remove
cons
opType
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
0
ref
296
ref
310
ref
cons
opType
316
def
313
remove
nil
cons
cons
opType
constTerm
290
ref
0
ref
0
ref
301
remove
310
remove
cons
opType
317
def
0
ref
0
ref
296
remove
303
remove
cons
opType
318
def
316
remove
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
305
ref
0
ref
180
remove
317
remove
nil
cons
cons
opType
constTerm
181
remove
appTerm
appTerm
262
ref
0
ref
133
remove
318
remove
nil
cons
cons
opType
constTerm
134
remove
appTerm
appTerm
appTerm
appTerm
247
ref
0
ref
221
ref
315
remove
nil
cons
cons
opType
constTerm
222
ref
appTerm
appTerm
"Data.Char.destChar"
const
314
remove
constTerm
appTerm
319
def
defineConst
320
def
pop
321
def
pop
320
remove
nil
7
ref
0
ref
311
ref
0
ref
311
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
321
remove
311
remove
constTerm
appTerm
319
remove
appTerm
thm
"Haskell.Data.Unicode.fromRandom"
240
ref
0
ref
0
ref
254
ref
199
ref
256
ref
cons
opType
322
def
254
ref
212
ref
256
remove
cons
opType
nil
cons
323
def
cons
opType
324
def
0
ref
0
ref
255
ref
322
remove
nil
cons
cons
opType
325
def
0
ref
255
remove
323
remove
cons
opType
326
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
262
ref
0
ref
219
ref
324
remove
nil
cons
cons
opType
constTerm
220
ref
appTerm
appTerm
"Data.Char.fromRandom"
const
325
remove
constTerm
appTerm
327
def
defineConst
328
def
pop
329
def
pop
328
remove
nil
7
ref
0
ref
326
ref
0
ref
326
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
329
remove
326
remove
constTerm
appTerm
327
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.isContinuationByte"
"Data.Char.UTF8.isContinuationByte"
const
0
ref
241
ref
2
ref
cons
opType
330
def
constTerm
331
def
defineConst
332
def
pop
333
def
pop
332
remove
nil
7
ref
0
ref
330
ref
0
ref
330
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
333
remove
330
remove
constTerm
appTerm
331
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.parseContinuationByte"
"Haskell.Parser.fromHol"
const
334
def
0
ref
"Parser.parser"
typeOp
335
def
241
ref
248
ref
cons
336
def
opType
337
def
"Haskell.Parser.Parser"
typeOp
338
def
336
ref
opType
339
def
nil
cons
cons
opType
constTerm
"Data.Char.UTF8.parseContinuationByte"
const
337
remove
constTerm
appTerm
340
def
defineConst
341
def
pop
342
def
pop
341
remove
nil
7
ref
0
ref
339
ref
0
ref
339
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
342
remove
339
remove
constTerm
appTerm
340
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.parseTwoContinuationBytes"
334
ref
0
ref
335
ref
241
ref
254
ref
336
remove
opType
343
def
nil
cons
cons
344
def
opType
345
def
338
ref
344
ref
opType
346
def
nil
cons
cons
opType
constTerm
"Data.Char.UTF8.parseTwoContinuationBytes"
const
345
remove
constTerm
appTerm
347
def
defineConst
348
def
pop
349
def
pop
348
remove
nil
7
ref
0
ref
346
ref
0
ref
346
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
349
remove
346
remove
constTerm
appTerm
347
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.parseThreeContinuationBytes"
334
ref
0
ref
335
ref
241
ref
254
ref
344
remove
opType
350
def
nil
cons
cons
351
def
opType
352
def
338
ref
351
remove
opType
353
def
nil
cons
cons
opType
constTerm
"Data.Char.UTF8.parseThreeContinuationBytes"
const
352
remove
constTerm
appTerm
354
def
defineConst
355
def
pop
356
def
pop
355
remove
nil
7
ref
0
ref
353
ref
0
ref
353
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
356
remove
353
remove
constTerm
appTerm
354
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decoder.decode1"
240
ref
0
ref
0
ref
0
ref
241
ref
"Data.Option.option"
typeOp
357
def
206
ref
opType
358
def
nil
cons
359
def
cons
opType
360
def
0
ref
241
ref
357
ref
218
ref
opType
nil
cons
361
def
cons
opType
nil
cons
362
def
cons
opType
363
def
0
ref
0
ref
241
ref
360
remove
nil
cons
cons
opType
364
def
0
ref
241
ref
362
remove
cons
opType
365
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
0
ref
358
remove
361
ref
cons
opType
366
def
363
remove
nil
cons
cons
opType
constTerm
"Data.Option.map"
const
367
def
0
ref
219
ref
366
ref
nil
cons
cons
opType
constTerm
220
ref
appTerm
368
def
appTerm
appTerm
"Data.Char.UTF8.decoder.decode1"
const
364
remove
constTerm
appTerm
369
def
defineConst
370
def
pop
371
def
pop
370
remove
nil
7
ref
0
ref
365
ref
0
ref
365
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
371
remove
365
remove
constTerm
appTerm
369
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decoder.decode2"
240
ref
0
ref
0
ref
0
ref
343
ref
359
ref
cons
opType
372
def
0
ref
343
remove
361
ref
cons
opType
nil
cons
373
def
cons
opType
374
def
0
ref
0
ref
241
ref
372
remove
nil
cons
cons
opType
375
def
0
ref
241
ref
373
remove
cons
opType
376
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
366
ref
374
remove
nil
cons
cons
opType
constTerm
368
ref
appTerm
appTerm
"Data.Char.UTF8.decoder.decode2"
const
375
remove
constTerm
appTerm
377
def
defineConst
378
def
pop
379
def
pop
378
remove
nil
7
ref
0
ref
376
ref
0
ref
376
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
379
remove
376
remove
constTerm
appTerm
377
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decoder.decode3"
240
ref
0
ref
0
ref
0
ref
350
ref
359
remove
cons
opType
380
def
0
ref
350
remove
361
remove
cons
opType
nil
cons
381
def
cons
opType
382
def
0
ref
0
ref
241
ref
380
remove
nil
cons
cons
opType
383
def
0
ref
241
ref
381
remove
cons
opType
384
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
366
remove
382
remove
nil
cons
cons
opType
constTerm
368
remove
appTerm
appTerm
"Data.Char.UTF8.decoder.decode3"
const
383
remove
constTerm
appTerm
385
def
defineConst
386
def
pop
387
def
pop
386
remove
nil
7
ref
0
ref
384
ref
0
ref
384
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
387
remove
384
remove
constTerm
appTerm
385
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decoder.parse"
240
ref
0
ref
0
ref
0
ref
"Parser.Stream.stream"
typeOp
388
def
248
ref
opType
389
def
357
ref
254
ref
199
ref
389
ref
nil
cons
390
def
cons
opType
391
def
nil
cons
opType
392
def
nil
cons
393
def
cons
opType
394
def
0
ref
"Haskell.Parser.Stream.Stream"
typeOp
395
def
248
ref
opType
396
def
357
ref
254
ref
212
ref
396
ref
nil
cons
397
def
cons
opType
nil
cons
398
def
opType
nil
cons
399
def
cons
opType
nil
cons
400
def
cons
opType
401
def
0
ref
0
ref
241
ref
394
ref
nil
cons
cons
opType
402
def
0
ref
241
ref
400
ref
cons
opType
403
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
290
ref
0
ref
0
ref
0
ref
396
ref
393
remove
cons
opType
404
def
400
remove
cons
opType
405
def
0
ref
0
ref
394
remove
404
remove
nil
cons
cons
opType
406
def
401
remove
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
0
ref
392
remove
399
remove
cons
opType
407
def
405
remove
nil
cons
cons
opType
constTerm
367
ref
0
ref
0
ref
391
ref
398
ref
cons
opType
408
def
407
remove
nil
cons
cons
opType
constTerm
290
ref
0
ref
0
ref
254
remove
212
ref
390
ref
cons
opType
409
def
398
remove
cons
opType
410
def
0
ref
0
ref
391
remove
409
remove
nil
cons
cons
opType
411
def
408
remove
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
305
remove
0
ref
0
ref
389
ref
397
remove
cons
opType
412
def
410
remove
nil
cons
cons
opType
constTerm
"Haskell.Parser.Stream.fromHol"
const
413
def
412
remove
constTerm
appTerm
appTerm
262
remove
0
ref
219
ref
411
remove
nil
cons
cons
opType
constTerm
220
ref
appTerm
appTerm
appTerm
appTerm
appTerm
247
ref
0
ref
0
ref
396
ref
390
remove
cons
opType
414
def
406
remove
nil
cons
cons
opType
constTerm
"Haskell.Parser.Stream.toHol"
const
414
ref
constTerm
415
def
appTerm
appTerm
appTerm
"Data.Char.UTF8.decoder.parse"
const
402
remove
constTerm
appTerm
416
def
defineConst
417
def
pop
418
def
pop
417
remove
nil
7
ref
0
ref
403
ref
0
ref
403
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
418
remove
403
remove
constTerm
appTerm
416
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decoder"
290
ref
0
ref
0
ref
335
ref
241
ref
218
ref
cons
419
def
opType
420
def
338
remove
419
remove
opType
421
def
nil
cons
422
def
cons
opType
423
def
0
ref
0
ref
335
remove
241
ref
206
ref
cons
opType
424
def
420
remove
nil
cons
cons
opType
425
def
0
ref
424
ref
422
remove
cons
opType
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
334
remove
423
remove
constTerm
appTerm
"Parser.map"
const
0
ref
219
ref
425
remove
nil
cons
cons
opType
constTerm
220
ref
appTerm
appTerm
"Data.Char.UTF8.decoder"
const
424
remove
constTerm
appTerm
426
def
defineConst
427
def
pop
428
def
pop
427
remove
nil
7
ref
0
ref
421
ref
0
ref
421
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
428
remove
421
remove
constTerm
appTerm
426
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decodeStream"
290
ref
0
ref
0
ref
0
ref
396
ref
388
ref
206
ref
opType
429
def
nil
cons
430
def
cons
opType
431
def
0
ref
396
remove
395
remove
218
ref
opType
nil
cons
432
def
cons
opType
433
def
nil
cons
434
def
cons
opType
435
def
0
ref
0
ref
0
ref
389
remove
430
remove
cons
opType
436
def
431
remove
nil
cons
cons
opType
437
def
0
ref
436
ref
434
remove
cons
opType
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
240
ref
0
ref
0
ref
429
ref
432
ref
cons
opType
438
def
435
remove
nil
cons
cons
opType
constTerm
290
remove
0
ref
0
ref
388
remove
218
ref
opType
439
def
432
remove
cons
opType
440
def
0
ref
0
ref
429
remove
439
remove
nil
cons
cons
opType
441
def
438
remove
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
413
remove
440
remove
constTerm
appTerm
"Parser.Stream.map"
const
0
ref
219
ref
441
remove
nil
cons
cons
opType
constTerm
220
ref
appTerm
appTerm
appTerm
appTerm
247
ref
0
ref
414
remove
437
remove
nil
cons
cons
opType
constTerm
415
remove
appTerm
appTerm
"Data.Char.UTF8.decodeStream"
const
436
remove
constTerm
appTerm
442
def
defineConst
443
def
pop
444
def
pop
443
remove
nil
7
ref
0
ref
433
ref
0
ref
433
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
444
remove
433
remove
constTerm
appTerm
442
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.decode"
240
remove
0
ref
0
ref
357
ref
"Data.List.list"
typeOp
445
def
206
remove
opType
446
def
nil
cons
447
def
opType
448
def
357
remove
445
ref
218
remove
opType
449
def
nil
cons
450
def
opType
nil
cons
451
def
cons
opType
452
def
0
ref
0
ref
445
remove
248
remove
opType
453
def
448
remove
nil
cons
cons
opType
454
def
0
ref
453
ref
451
remove
cons
opType
455
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
367
remove
0
ref
0
ref
446
ref
450
remove
cons
opType
456
def
452
remove
nil
cons
cons
opType
constTerm
"Data.List.map"
const
457
def
0
ref
219
remove
456
remove
nil
cons
cons
opType
constTerm
220
remove
appTerm
appTerm
appTerm
"Data.Char.UTF8.decode"
const
454
remove
constTerm
appTerm
458
def
defineConst
459
def
pop
460
def
pop
459
remove
nil
7
ref
0
ref
455
ref
0
ref
455
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
460
remove
455
remove
constTerm
appTerm
458
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.encoder.encode1"
"Data.Char.UTF8.encoder.encode1"
const
0
ref
241
ref
0
ref
241
ref
453
remove
nil
cons
461
def
cons
opType
nil
cons
cons
opType
462
def
constTerm
463
def
defineConst
464
def
pop
465
def
pop
464
remove
nil
7
ref
0
ref
462
ref
0
ref
462
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
466
def
465
remove
462
ref
constTerm
appTerm
463
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.encoder.encode2"
"Data.Char.UTF8.encoder.encode2"
const
462
ref
constTerm
467
def
defineConst
468
def
pop
469
def
pop
468
remove
nil
466
remove
469
remove
462
ref
constTerm
appTerm
467
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.encoder.encode3"
"Data.Char.UTF8.encoder.encode3"
const
0
ref
241
remove
462
remove
nil
cons
cons
opType
470
def
constTerm
471
def
defineConst
472
def
pop
473
def
pop
472
remove
nil
7
ref
0
ref
470
ref
0
ref
470
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
473
remove
470
remove
constTerm
appTerm
471
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.encoder"
247
ref
0
ref
221
ref
0
ref
0
ref
199
remove
461
ref
cons
opType
474
def
0
ref
212
remove
461
ref
cons
opType
475
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
222
ref
appTerm
"Data.Char.UTF8.encoder"
const
474
remove
constTerm
appTerm
476
def
defineConst
477
def
pop
478
def
pop
477
remove
nil
7
ref
0
ref
475
ref
0
ref
475
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
478
remove
475
remove
constTerm
appTerm
476
remove
appTerm
thm
"Haskell.Data.Unicode.UTF8.encode"
247
remove
0
ref
0
ref
449
ref
447
remove
cons
opType
479
def
0
ref
0
ref
446
remove
461
ref
cons
opType
480
def
0
ref
449
remove
461
remove
cons
opType
481
def
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
457
remove
0
ref
221
remove
479
remove
nil
cons
cons
opType
constTerm
222
remove
appTerm
appTerm
"Data.Char.UTF8.encode"
const
480
remove
constTerm
appTerm
482
def
defineConst
483
def
pop
484
def
pop
483
remove
nil
7
remove
0
ref
481
ref
0
remove
481
ref
2
remove
cons
opType
nil
cons
cons
opType
constTerm
484
remove
481
remove
constTerm
appTerm
482
remove
appTerm
thm
