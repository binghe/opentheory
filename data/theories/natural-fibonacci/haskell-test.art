6
version
nil
"Data.Bool.!"
const
"->"
typeOp
0
def
0
ref
"Number.Natural.natural"
typeOp
nil
opType
1
def
"bool"
typeOp
nil
opType
nil
cons
2
def
cons
opType
3
def
2
ref
cons
opType
constTerm
4
def
"n"
1
ref
var
5
def
"Number.Natural.Fibonacci.zeckendorf"
const
0
ref
"Data.List.list"
typeOp
2
ref
opType
6
def
2
remove
cons
opType
constTerm
"Number.Natural.Fibonacci.encode"
const
0
ref
1
ref
6
ref
nil
cons
cons
opType
constTerm
5
ref
varTerm
7
def
appTerm
8
def
appTerm
absTerm
appTerm
9
def
axiom
nil
9
remove
thm
nil
4
ref
5
remove
"="
const
0
ref
1
ref
3
remove
nil
cons
cons
opType
constTerm
10
def
"Number.Natural.Fibonacci.decode"
const
0
ref
6
remove
1
ref
nil
cons
11
def
cons
opType
constTerm
8
remove
appTerm
appTerm
7
remove
appTerm
absTerm
appTerm
12
def
axiom
nil
12
remove
thm
nil
4
ref
"j"
1
ref
var
13
def
4
remove
"k"
1
ref
var
14
def
10
remove
"Data.Stream.nth"
const
0
ref
"Data.Stream.stream"
typeOp
11
ref
opType
15
def
0
ref
1
ref
11
remove
cons
opType
16
def
nil
cons
17
def
cons
opType
constTerm
"Number.Natural.Fibonacci.all"
const
15
remove
constTerm
appTerm
18
def
"Number.Natural.+"
const
0
remove
1
ref
17
remove
cons
opType
19
def
constTerm
20
def
13
remove
varTerm
21
def
appTerm
22
def
20
ref
14
remove
varTerm
23
def
appTerm
"Number.Natural.bit1"
const
16
remove
constTerm
"Number.Natural.zero"
const
1
remove
constTerm
appTerm
24
def
appTerm
25
def
appTerm
appTerm
appTerm
20
remove
"Number.Natural.*"
const
19
remove
constTerm
26
def
18
ref
21
remove
appTerm
appTerm
18
ref
23
remove
appTerm
appTerm
appTerm
26
remove
18
ref
22
remove
24
remove
appTerm
appTerm
appTerm
18
remove
25
remove
appTerm
appTerm
appTerm
appTerm
absTerm
appTerm
absTerm
appTerm
27
def
axiom
nil
27
remove
thm
