6
version
nil
"Data.Bool.!"
const
"->"
typeOp
0
def
0
ref
"Number.Natural.natural"
typeOp
nil
opType
1
def
"bool"
typeOp
nil
opType
nil
cons
2
def
cons
opType
3
def
2
ref
cons
opType
constTerm
4
def
"n"
1
ref
var
5
def
"Number.Natural.Fibonacci.zeckendorf"
const
0
ref
"Data.List.list"
typeOp
2
ref
opType
6
def
2
remove
cons
opType
constTerm
"Number.Natural.Fibonacci.encode"
const
0
ref
1
ref
6
ref
nil
cons
cons
opType
constTerm
5
ref
varTerm
7
def
appTerm
8
def
appTerm
absTerm
appTerm
9
def
axiom
nil
9
remove
thm
nil
4
remove
5
remove
"="
const
0
ref
1
ref
3
remove
nil
cons
cons
opType
constTerm
"Number.Natural.Fibonacci.decode"
const
0
remove
6
remove
1
remove
nil
cons
cons
opType
constTerm
8
remove
appTerm
appTerm
7
remove
appTerm
absTerm
appTerm
10
def
axiom
nil
10
remove
thm
