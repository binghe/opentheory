6
version
nil
"Data.Bool.!"
const
0
def
"->"
typeOp
1
def
1
ref
"Data.List.list"
typeOp
"A"
varType
nil
cons
2
def
opType
3
def
"bool"
typeOp
nil
opType
4
def
nil
cons
5
def
cons
6
def
opType
5
ref
cons
opType
constTerm
"l"
3
ref
var
7
def
"="
const
8
def
1
ref
"Data.Pair.*"
typeOp
6
remove
opType
9
def
1
ref
9
ref
5
ref
cons
opType
nil
cons
cons
opType
constTerm
"Parser.Stream.toList"
const
1
ref
"Parser.Stream.stream"
typeOp
2
remove
opType
10
def
9
ref
nil
cons
11
def
cons
opType
constTerm
12
def
"Parser.Stream.fromList"
const
1
ref
3
ref
10
ref
nil
cons
cons
opType
constTerm
7
remove
varTerm
13
def
appTerm
appTerm
appTerm
"Data.Pair.,"
const
1
ref
3
ref
1
ref
4
ref
11
remove
cons
opType
nil
cons
cons
opType
constTerm
13
remove
appTerm
"Data.Bool.F"
const
4
remove
constTerm
appTerm
appTerm
absTerm
appTerm
14
def
axiom
nil
14
remove
thm
nil
0
remove
1
ref
1
ref
10
ref
5
ref
cons
opType
5
ref
cons
opType
constTerm
"xs"
10
ref
var
15
def
8
remove
1
ref
"Number.Natural.natural"
typeOp
nil
opType
16
def
1
ref
16
ref
5
remove
cons
opType
nil
cons
cons
opType
constTerm
"Parser.Stream.length"
const
1
ref
10
remove
16
remove
nil
cons
17
def
cons
opType
constTerm
15
remove
varTerm
18
def
appTerm
appTerm
"Data.List.length"
const
1
ref
3
ref
17
remove
cons
opType
constTerm
"Data.Pair.fst"
const
1
remove
9
remove
3
remove
nil
cons
cons
opType
constTerm
12
remove
18
remove
appTerm
appTerm
appTerm
appTerm
absTerm
appTerm
19
def
axiom
nil
19
remove
thm
