6
version
nil
"Data.Bool.!"
const
"->"
typeOp
0
def
0
ref
"Data.List.list"
typeOp
"A"
varType
nil
cons
1
def
opType
2
def
"bool"
typeOp
nil
opType
3
def
nil
cons
4
def
cons
5
def
opType
4
ref
cons
opType
constTerm
"l"
2
ref
var
6
def
"="
const
0
ref
"Data.Pair.*"
typeOp
5
remove
opType
7
def
0
ref
7
ref
4
remove
cons
opType
nil
cons
cons
opType
constTerm
"Parser.Stream.toList"
const
0
ref
"Parser.Stream.stream"
typeOp
1
remove
opType
8
def
7
remove
nil
cons
9
def
cons
opType
constTerm
"Parser.Stream.fromList"
const
0
ref
2
ref
8
remove
nil
cons
cons
opType
constTerm
6
remove
varTerm
10
def
appTerm
appTerm
appTerm
"Data.Pair.,"
const
0
ref
2
remove
0
remove
3
ref
9
remove
cons
opType
nil
cons
cons
opType
constTerm
10
remove
appTerm
"Data.Bool.F"
const
3
remove
constTerm
appTerm
appTerm
absTerm
appTerm
11
def
axiom
nil
11
remove
thm
