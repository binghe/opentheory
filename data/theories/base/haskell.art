6
version
nil
"Data.Bool./\\"
const
"->"
typeOp
0
def
"bool"
typeOp
nil
opType
1
def
0
ref
1
ref
1
remove
nil
cons
2
def
cons
opType
nil
cons
cons
opType
constTerm
"="
const
0
ref
"Number.Natural.natural"
typeOp
nil
opType
3
def
0
ref
3
ref
2
ref
cons
opType
nil
cons
cons
opType
constTerm
4
def
"Data.List.length"
const
0
ref
"Data.List.list"
typeOp
"A"
varType
5
def
nil
cons
opType
6
def
3
ref
nil
cons
7
def
cons
opType
constTerm
8
def
"Data.List.[]"
const
6
ref
constTerm
appTerm
appTerm
"Number.Natural.zero"
const
3
ref
constTerm
9
def
appTerm
appTerm
"Data.Bool.!"
const
10
def
0
ref
0
ref
5
ref
2
ref
cons
opType
2
ref
cons
opType
constTerm
"h"
5
ref
var
11
def
10
remove
0
ref
0
ref
6
ref
2
ref
cons
opType
2
remove
cons
opType
constTerm
"t"
6
ref
var
12
def
4
remove
8
ref
"Data.List.::"
const
0
ref
5
remove
0
ref
6
ref
6
remove
nil
cons
cons
opType
nil
cons
cons
opType
constTerm
11
remove
varTerm
appTerm
12
remove
varTerm
13
def
appTerm
appTerm
appTerm
"Number.Natural.+"
const
0
ref
3
ref
0
remove
3
remove
7
remove
cons
opType
14
def
nil
cons
cons
opType
constTerm
8
remove
13
remove
appTerm
appTerm
"Number.Natural.bit1"
const
14
remove
constTerm
9
remove
appTerm
appTerm
appTerm
absTerm
appTerm
absTerm
appTerm
appTerm
15
def
axiom
nil
15
remove
thm
