#!/usr/bin/perl

# Copyright (c) 2011 Joe Leslie-Hurd, distributed under the MIT license

use strict;
use warnings;
use Pod::Usage;
use Getopt::Std;

use vars qw($opt_h $opt_u $opt_d);

getopts('hud');

if ($opt_h or scalar @ARGV != 0)
{
    pod2usage({-exitval => 2,
	       -verbose => 2});
}

# Autoflush STDIN
$|++;

my $orderthys = "scripts/order-theories";
[ -x $orderthys ] or die "install-theories: $orderthys not an executable";

my $opentheory = "bin/mlton/opentheory";
[ -x $opentheory ] or die "install-theories: $opentheory not an executable";

my $bumpver = "scripts/bump-theory-version";
[ -x $bumpver ] or die "install-theories: $bumpver not an executable";

my $source = "data/theories";
[ -d $source ] or die "install-theories: $source not a directory";

my $cmd = "$orderthys";

# print STDOUT "cmd = $cmd\n";

open THEORIES, "$cmd |" or
    die "install-theories: couldn't execute $cmd: $!\n";

while (my $name = <THEORIES>) {
    chomp $name;

    if ($opt_d) { print STDOUT "processing theory $name.\n"; }

    my $thy = $source . '/' . $name . '/' . $name . '.thy';

    $cmd = "$opentheory info --format VERSION $thy";
    my $version = `$cmd`;
    chomp $version;

    if ($opt_d) { print STDOUT "queued version is $version.\n"; }

    $cmd = "$opentheory info --format CHECKSUM $name-$version >/dev/null 2>&1";
    # print STDOUT "cmd = $cmd\n";
    my $installed = (system ($cmd) == 0);

    if ($opt_d) {
      if ($installed) { print STDOUT "this version is already installed.\n"; }
      else { print STDOUT "this version is not already installed.\n"; }
    }

    if ($opt_u) {
        my $thynew = $thy . '.upgrading';

        $cmd = "$opentheory info --upgrade-theory --information --format '' --theory-source $thy >$thynew 2>/dev/null";
        # print STDOUT "cmd = $cmd\n";
        if (system ($cmd) == 0) {
            if ($opt_d) { print STDOUT "auto-upgraded theory file.\n"; }
            if ($installed) {
                $cmd = "$bumpver $thynew > $thy";
                (system ($cmd) == 0) or
                    die "install-theories: couldn't execute $cmd: $!\n";
                if ($opt_d) { print STDOUT "bumped version number.\n"; }

                unlink $thynew or
                    die "install-theories: couldn't remove $thynew: $!\n";

                $installed = 0;
            }
            else {
                rename($thynew,$thy) or
                    die "install-theories: couldn't rename $thynew to $thy: $!\n";
            }
        }
        else {
            unlink $thynew or
                die "install-theories: couldn't remove $thynew: $!\n";
        }
    }

    if (!$installed) {
        $cmd = "$opentheory install --manual --reinstall --auto-uninstall $thy";
        (system ($cmd) == 0) or
            die "install-theories: couldn't execute $cmd: $!\n";
    }
    else {
        if ($opt_d) { print STDOUT "skipping installation.\n"; }
    }

    if ($opt_d) { print STDOUT "finished processing theory $name.\n\n"; }
}

close THEORIES;

__END__

=pod

=head1 NAME

install-theories - install theories in the local repository

=head1 SYNOPSIS

install-theories [-hud]

=head1 ARGUMENTS

The recognized flags are described below:

=over 2

=item B<-h>

Produce this documentation.

=item B<-u>

Auto-upgrade the theories before installing them.

=item B<-d>

Debug mode: be chatty about what is happening.

=back

=head1 DESCRIPTION

Install theories in the local repository.

=head1 BUGS

Waiting to rear their ugly heads.

=head1 AUTHORS

Joe Leslie-Hurd <joe@gilith.com>

=head1 SEE ALSO

Perl(1).

=cut
