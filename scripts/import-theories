#!/usr/bin/perl

# Copyright (c) 2011 Joe Leslie-Hurd, distributed under the MIT license

use strict;
use warnings;
use Pod::Usage;
use Getopt::Std;

use vars qw($opt_h $opt_a $opt_l $opt_p $opt_u);

getopts('ha:l:p:u');

if ($opt_h or scalar @ARGV != 1)
{
    pod2usage({-exitval => 2,
	       -verbose => 2});
}

# Autoflush STDIN
$|++;

my $program = "import-theories";

my $author = 'Joe Leslie-Hurd <joe@gilith.com>';
if ($opt_a) { $author = $opt_a; }

my $license = 'MIT';
if ($opt_l) { $license = $opt_l; }

my $provenance = 'Theory';
if ($opt_p) { $provenance = $opt_p; }

my $opentheory = "bin/mlton/opentheory";
[ -x $opentheory ] or die "$program: $opentheory not an executable";

my $bumpver = "scripts/bump-theory-version";
[ -x $bumpver ] or die "$program: $bumpver not an executable";

my $source = $ARGV[0];
if ($source ne '/' && $source =~ m{^(.*)/$}) { $source = $1; }
[ -d $source ] or die "$program: $source not a directory";

my $target = "data/theories";
[ -d $target ] or die "$program: $target not a directory";

my $cmd = "ls $source";

# print STDOUT "cmd = $cmd\n";

open THEORIES, "$cmd |" or
  die "$program: couldn't read $source directory: $!\n";

while (my $thy = <THEORIES>) {
  chomp $thy;

  if ($thy =~ m{^([[:alnum:]-]+)[.]thy$}) {
    my $base = $1;
    my $tdir = "$target/$base";
    my $tthy = "$tdir/$base.thy";
    my $tart = "$tdir/$base.art";
    my $tthynew = "$tthy.importing";
    my $tthynewtmp = "$tthynew.thy";
    my $tartnew = "$tart.importing";
    my $tartnewtmp = "$tartnew.art";

    if (!(-d $tdir)) {
      mkdir $tdir or
        die "$program: couldn't make directory $tdir: $!\n";

      my $today = `date "+%Y-%m-%d"`;
      chomp $today;

      open THEORY, "> $tthy" or
        die "$program: couldn't open $tthy for writing: $!\n";

      print THEORY "name: $base\n";
      print THEORY "version: 1.0\n";
      print THEORY "description: $base\n";
      print THEORY "author: $author\n";
      print THEORY "license: $license\n";
      print THEORY "provenance: $provenance extracted on $today\n";
      print THEORY "show: \"Data.Bool\"\n";
      print THEORY "\n";
      print THEORY "main {\n";
      print THEORY "  article: \"$base.art\"\n";
      print THEORY "}\n";

      close THEORY;
    }

    $cmd = "$opentheory info --preserve-theory --article -o $tartnew $source/$thy";
    (system ($cmd) == 0) or
      die "$program: couldn't execute $cmd: $!\n";

    $cmd = "grep 'Unwanted' $tartnew";
    (system ($cmd) != 0) or
      die "$program: Unwanted symbols found in $base\n";

    if ($opt_u && defined( -e $tart )) {
      my $replace = 1;

      if ($replace) {
        $cmd = "diff $tart $tartnew >/dev/null";
        if (system ($cmd) == 0) {
          $replace = 0;
        }
      }

      if ($replace) {
        if (( -s $tart ) <= ( -s $tartnew )) {
          $cmd = "$opentheory info --theorems -o $tart.thms $tart";
          (system ($cmd) == 0) or
            die "$program: couldn't execute $cmd: $!\n";

          $cmd = "$opentheory info --theorems -o $tartnew.thms $tartnew";
          (system ($cmd) == 0) or
            die "$program: couldn't execute $cmd: $!\n";

          $cmd = "diff $tart.thms $tartnew.thms >/dev/null";
          if (system ($cmd) == 0) {
            $cmd = "$opentheory info --theorems -o $tart.asms $tart";
            (system ($cmd) == 0) or
              die "$program: couldn't execute $cmd: $!\n";

            $cmd = "$opentheory info --theorems -o $tartnew.asms $tartnew";
            (system ($cmd) == 0) or
              die "$program: couldn't execute $cmd: $!\n";

            $cmd = "diff $tart.asms $tartnew.asms >/dev/null";
            if (system ($cmd) == 0) {
              $replace = 0;
            }

            unlink "$tart.asms" or
              die "$program: couldn't remove $tart.asms: $!\n";

            unlink "$tartnew.asms" or
              die "$program: couldn't remove $tartnew.asms: $!\n";
          }

          unlink "$tart.thms" or
            die "$program: couldn't remove $tart.thms: $!\n";

          unlink "$tartnew.thms" or
            die "$program: couldn't remove $tartnew.thms: $!\n";
        }
      }

      if ($replace) {
        $cmd = "$bumpver -p $tthy > $tthynew";
        (system ($cmd) == 0) or
          die "$program: couldn't execute $cmd: $!\n";

        rename($tthynew,$tthy) or
          die "$program: couldn't rename $tthynew to $tthy: $!\n";

        rename($tartnew,$tart) or
          die "$program: couldn't rename $tartnew to $tart: $!\n";

        print STDOUT "re-imported $base\n";
      }
      else {
        unlink $tartnew or
          die "$program: couldn't remove $tartnew: $!\n";
      }
    }
    else {
      rename($tartnew,$tart) or
        die "$program: couldn't rename $tartnew to $tart: $!\n";

      print STDOUT "imported $base\n";
    }
  }
}

close THEORIES;

__END__

=pod

=head1 NAME

import-theories - import theories extracted from a theorem prover

=head1 SYNOPSIS

import-theories [-h] [-a AUTHOR] [-l LICENSE] [-p PROVENANCE] [-u] <theory-dir>

=head1 ARGUMENTS

The recognized flags are described below:

=over 2

=item B<-h>

Produce this documentation.

=item B<-a AUTHOR>

Set the default author.

=item B<-l LICENSE>

Set the default license.

=item B<-p PROVENANCE>

Set the default provenance.

=item B<-u>

Auto-upgrade the theories during import.

=back

=head1 DESCRIPTION

Import raw theories in OpenTheory format extracted from a theorem prover.

=head1 BUGS

Waiting to rear their ugly heads.

=head1 AUTHORS

Joe Leslie-Hurd <joe@gilith.com>

=head1 SEE ALSO

Perl(1).

=cut
