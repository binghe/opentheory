###############################################################################
# OPEN THEORY DEVELOPMENT MAKEFILE
# Copyright (c) 2005-2007 Joe Hurd, distributed under the GNU GPL version 2
###############################################################################

.PRECIOUS: bin/mlton/%.sml bin/mlton/%.mlb

###############################################################################
# Cleaning temporary files.
###############################################################################

TEMPFILE = Makefile-temp-file

TEMP += $(TEMPFILE) \
	bin/mlton/*.ssa bin/mlton/*.ssa2 \
        bin/mlton/benchmark \
        mlmon.out profile-*

###############################################################################
# The ML preprocessor.
###############################################################################

MLPP_OPTS += -r 'OpenTheoryDebug'
#MLPP_OPTS += -r 'OpenTheoryDebug|OpenTheoryTrace[0-1]'
#MLPP_OPTS += -r 'OpenTheoryDebug|OpenTheoryTrace[0-2]'
#MLPP_OPTS += -r 'OpenTheoryDebug|OpenTheoryTrace[0-3]'
#MLPP_OPTS += -r 'OpenTheoryDebug|OpenTheoryTrace[0-4]'
#MLPP_OPTS += -r 'OpenTheoryDebug|OpenTheoryTrace[0-5]'
#MLPP_OPTS += -r 'OpenTheoryDebug|OpenTheoryTrace[0-6]'
#MLPP_OPTS += -r 'BasicDebug|MetisDebug|OpenTheoryDebug|OpenTheoryTrace[0-9]'

###############################################################################
# The Moscow ML compiler.
###############################################################################

MOSML_DEP = scripts/mosml_dep

bin/mosml/Makefile.src: Makefile Makefile.dev $(MOSML_DEP) $(MLPP)
	@echo
	@echo '****************************************************'
	@echo '* Regenerating the Moscow ML makefile dependencies *'
	@echo '****************************************************'
	@echo
	@$(MOSML_DEP) $(MOSML_SRC) $(MOSML_TARGETS) > $@

###############################################################################
# The MLton compiler.
###############################################################################

MLTON_OPTS += -verbose 1 -keep ssa -keep ssa2
#MLTON_OPTS += -inline 100000
#MLTON_OPTS += -const 'MLton.safe false' -const 'MLton.detectOverflow false'
#MLTON_OPTS += -const 'Exn.keepHistory true'

###############################################################################
# Moving source files around.
###############################################################################

COPY = scripts/copy_src

MLIMPORT = scripts/mlimport

IMPORT_METIS = doc/IMPORT-METIS

src/ElementSet.sig: ../basic/src/ElementSet.sig $(COPY) ; @$(COPY) $< $@
src/ElementSet.sml: ../basic/src/ElementSet.sml $(COPY) ; @$(COPY) $< $@
src/Heap.sig: ../basic/src/Heap.sig $(COPY) ; @$(COPY) $< $@
src/Heap.sml: ../basic/src/Heap.sml $(COPY) ; @$(COPY) $< $@
src/KeyMap.sig: ../basic/src/KeyMap.sig $(COPY) ; @$(COPY) $< $@
src/KeyMap.sml: ../basic/src/KeyMap.sml $(COPY) ; @$(COPY) $< $@
src/Lazy.sig: ../basic/src/Lazy.sig $(COPY) ; @$(COPY) $< $@
src/Lazy.sml: ../basic/src/Lazy.sml $(COPY) ; @$(COPY) $< $@
src/Map.sig: ../basic/src/Map.sig $(COPY) ; @$(COPY) $< $@
src/Map.sml: ../basic/src/Map.sml $(COPY) ; @$(COPY) $< $@
src/MetisActive.sig: ../metis/src/Active.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisActive.sml: ../metis/src/Active.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisAtom.sig: ../metis/src/Atom.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisAtom.sml: ../metis/src/Atom.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisAtomNet.sig: ../metis/src/AtomNet.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisAtomNet.sml: ../metis/src/AtomNet.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisClause.sig: ../metis/src/Clause.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisClause.sml: ../metis/src/Clause.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisFormula.sig: ../metis/src/Formula.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisFormula.sml: ../metis/src/Formula.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisKnuthBendixOrder.sig: ../metis/src/KnuthBendixOrder.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisKnuthBendixOrder.sml: ../metis/src/KnuthBendixOrder.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisLiteral.sig: ../metis/src/Literal.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisLiteral.sml: ../metis/src/Literal.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisLiteralNet.sig: ../metis/src/LiteralNet.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisLiteralNet.sml: ../metis/src/LiteralNet.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisModel.sig: ../metis/src/Model.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisModel.sml: ../metis/src/Model.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisName.sig: ../metis/src/Name.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisName.sml: ../metis/src/Name.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisNormalize.sig: ../metis/src/Normalize.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisNormalize.sml: ../metis/src/Normalize.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisProblem.sig: ../metis/src/Problem.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisProblem.sml: ../metis/src/Problem.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisProof.sig: ../metis/src/Proof.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisProof.sml: ../metis/src/Proof.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisResolution.sig: ../metis/src/Resolution.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisResolution.sml: ../metis/src/Resolution.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisRewrite.sig: ../metis/src/Rewrite.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisRewrite.sml: ../metis/src/Rewrite.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisRule.sig: ../metis/src/Rule.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisRule.sml: ../metis/src/Rule.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisSubst.sig: ../metis/src/Subst.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisSubst.sml: ../metis/src/Subst.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisSubsume.sig: ../metis/src/Subsume.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisSubsume.sml: ../metis/src/Subsume.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisTerm.sig: ../metis/src/Term.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisTerm.sml: ../metis/src/Term.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisTermNet.sig: ../metis/src/TermNet.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisTermNet.sml: ../metis/src/TermNet.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisThm.sig: ../metis/src/Thm.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisThm.sml: ../metis/src/Thm.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisTptp.sig: ../metis/src/Tptp.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisTptp.sml: ../metis/src/Tptp.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisUnits.sig: ../metis/src/Units.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisUnits.sml: ../metis/src/Units.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisWaiting.sig: ../metis/src/Waiting.sig $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/MetisWaiting.sml: ../metis/src/Waiting.sml $(MLIMPORT) $(IMPORT_METIS) ; @$(MLIMPORT) -c $(IMPORT_METIS) $< $@
src/Options.sig: ../basic/src/Options.sig $(COPY) ; @$(COPY) $< $@
src/Options.sml: ../basic/src/Options.sml $(COPY) ; @$(COPY) $< $@
src/Ordered.sig: ../basic/src/Ordered.sig $(COPY) ; @$(COPY) $< $@
src/Ordered.sml: ../basic/src/Ordered.sml $(COPY) ; @$(COPY) $< $@
src/Parse.sig: ../basic/src/Parse.sig $(COPY) ; @$(COPY) $< $@
src/Parse.sml: ../basic/src/Parse.sml $(COPY) ; @$(COPY) $< $@
src/Portable.sig: ../basic/src/Portable.sig $(COPY) ; @$(COPY) $< $@
src/PortableMosml.sml: ../basic/src/PortableMosml.sml $(COPY) ; @$(COPY) $< $@
src/PortableMlton.sml: ../basic/src/PortableMlton.sml $(COPY) ; @$(COPY) $< $@
src/Print.sig: ../basic/src/Print.sig $(COPY) ; @$(COPY) $< $@
src/Print.sml: ../basic/src/Print.sml $(COPY) ; @$(COPY) $< $@
src/Random.sig: ../basic/src/Random.sig $(COPY) ; @$(COPY) $< $@
src/Random.sml: ../basic/src/Random.sml $(COPY) ; @$(COPY) $< $@
src/RandomMap.sml: ../basic/src/RandomMap.sml $(COPY) ; @$(COPY) $< $@
src/RandomSet.sml: ../basic/src/RandomSet.sml $(COPY) ; @$(COPY) $< $@
src/Set.sig: ../basic/src/Set.sig $(COPY) ; @$(COPY) $< $@
src/Set.sml: ../basic/src/Set.sml $(COPY) ; @$(COPY) $< $@
src/Sharing.sig: ../basic/src/Sharing.sig $(COPY) ; @$(COPY) $< $@
src/Sharing.sml: ../basic/src/Sharing.sml $(COPY) ; @$(COPY) $< $@
src/Stream.sig: ../basic/src/Stream.sig $(COPY) ; @$(COPY) $< $@
src/Stream.sml: ../basic/src/Stream.sml $(COPY) ; @$(COPY) $< $@
src/Useful.sig: ../basic/src/Useful.sig $(COPY) ; @$(COPY) $< $@
src/Useful.sml: ../basic/src/Useful.sml $(COPY) ; @$(COPY) $< $@

src/selftest.sml: test/test.sml $(COPY) ; @$(COPY) $< $@

src/benchmark.sml: src/behold.sml $(COPY) ; @$(COPY) $< $@

###############################################################################
# Counting the number of lines of code.
###############################################################################

LINES = scripts/ml_lines

.PHONY: lines
lines: $(LINES)
	@echo
	@echo -n 'Behold '
	@$(LINES) $(SRC) src/behold.sml
	@echo

###############################################################################
# Profiling using MLton.
###############################################################################

BENCHMARK_OPTS = --show name $(BENCHMARK_SET)/*.tptp

profile-time.mlb: bin/mlton/benchmark.sml
	echo '$$(SML_LIB)/basis/basis.mlb $$(SML_LIB)/basis/mlton.mlb $<' > $@

profile-time: profile-time.mlb
	@echo
	@echo '********************************************************'
	@echo '* Compile the OpenTheory benchmark with time profiling *'
	@echo '********************************************************'
	@echo
	$(MLTON) $(MLTON_OPTS) -profile time -profile-stack true -profile-branch true $<
	@echo

profile-time.out profile-time-log: profile-time
	time ./profile-time $(BENCHMARK_OPTS) | tee profile-time-log
	mv mlmon.out profile-time.out

profile-time.txt: profile-time.out Makefile.dev
	mlprof -show-line true -raw true -keep '(and (thresh 0.1) (thresh-stack 0.1))' -split '.*' profile-time profile-time.out > $@

profile-time.dot: profile-time.out Makefile.dev
	mlprof -show-line true -raw true -call-graph $@ -keep '(thresh-stack 1)' -graph-title "OpenTheory Time Profiling" -split '.*' profile-time profile-time.out > /dev/null

.PHONY: profile
profile: profile-time.txt profile-time.dot

###############################################################################
# Releasing.
###############################################################################

RELEASE_DIR = release

.PHONY: tarball
tarball: clean doc/DONT-RELEASE Makefile.dev
	cd .. ; tar cvzhf opentheory/release/OpenTheory.tar.gz --exclude-from opentheory/doc/DONT-RELEASE opentheory

.PHONY: release
release: mosml mlton tarball
	rm -f $(RELEASE_DIR)/*.html $(RELEASE_DIR)/*.txt
	cp -v doc/*.html doc/*.txt $(RELEASE_DIR)/
	rsync -azv --delete --checksum --size-only --exclude=.cvsignore --exclude=CVS --exclude=num.art --exclude=articles.tar.gz -e ssh $(RELEASE_DIR)/ gilith@login.gilith.com:public_html/software/opentheory

###############################################################################
# The build scripts.
###############################################################################

$(COPY): ../basic/scripts/copy_src
	@cp -fv $< $@
	@chmod -w $@

$(MLIMPORT): ../basic/scripts/mlimport $(COPY) ; @$(COPY) $< $@

$(MLPP): ../basic/scripts/mlpp $(COPY) ; @$(COPY) $< $@

$(MOSML_DEP): ../basic/scripts/mosml_dep $(COPY) ; @$(COPY) $< $@

$(LINES): ../basic/scripts/ml_lines $(COPY) ; @$(COPY) $< $@

$(RELEASE_STAMP): ../basic/scripts/release_stamp $(COPY) ; @$(COPY) $< $@

.PHONY: build-scripts
build-scripts: $(COPY) $(MLPP) $(MOSML_DEP) $(LINES) $(RELEASE_STAMP)
