"T"
"="
const
0
def
"fun"
typeOp
1
def
1
ref
"bool"
typeOp
2
def
nil
opType
3
def
3
ref
nil
cons
cons
opType
4
def
1
ref
4
ref
3
ref
nil
cons
cons
opType
5
def
nil
cons
cons
opType
6
def
constTerm
7
def
"p"
3
ref
var
"p"
3
ref
var
varTerm
8
def
absTerm
9
def
appTerm
10
def
9
ref
appTerm
11
def
defineConst
12
def
pop
13
def
pop
12
ref
nil
0
ref
1
ref
3
ref
4
ref
nil
cons
cons
opType
14
def
constTerm
15
def
13
ref
3
ref
constTerm
16
def
appTerm
17
def
11
ref
appTerm
18
def
thm
"p"
"bool"
typeOp
0
def
nil
opType
1
def
var
"p"
1
ref
var
varTerm
2
def
absTerm
3
def
refl
4
def
pop
"T"
const
5
def
1
ref
constTerm
6
def
refl
7
def
pop
"="
const
8
def
"fun"
typeOp
9
def
1
ref
9
ref
1
ref
1
ref
nil
cons
cons
opType
10
def
nil
cons
cons
opType
11
def
constTerm
12
def
refl
13
def
pop
13
ref
nil
12
ref
6
ref
appTerm
14
def
8
ref
9
ref
10
ref
9
ref
10
ref
1
ref
nil
cons
cons
opType
15
def
nil
cons
cons
opType
16
def
constTerm
17
def
3
ref
appTerm
18
def
3
ref
appTerm
19
def
appTerm
20
def
axiom
21
def
app
22
def
pop
22
ref
7
ref
app
23
def
pop
23
ref
7
ref
# |- (T <=> T) <=> (\p. p) = (\p. p) <=> T
# |- T <=> T
eqMp
# |- (\p. p) = (\p. p) <=> T
24
def
pop
24
ref
4
ref
# |- (\p. p) = (\p. p) <=> T
# |- (\p. p) = (\p. p)
eqMp
# |- T
25
def
pop
25
ref
nil
6
ref
thm
"t"
1
ref
var
varTerm
26
def
assume
27
def
pop
27
ref
25
ref
deductAntisym
28
def
pop
12
ref
26
ref
appTerm
29
def
6
ref
appTerm
30
def
assume
31
def
pop
26
ref
refl
32
def
pop
13
ref
31
ref
app
33
def
pop
33
ref
32
ref
app
34
def
pop
34
ref
32
ref
# t <=> T
# |- (t <=> t) <=> T <=> t
# |- t <=> t
eqMp
# t <=> T
# |- T <=> t
35
def
pop
35
ref
25
ref
# t <=> T
# |- T <=> t
# |- T
eqMp
# t <=> T
# |- t
36
def
pop
36
ref
28
ref
deductAntisym
37
def
pop
"/\\"
"p"
1
ref
var
"q"
1
ref
var
8
ref
9
ref
9
ref
11
ref
1
ref
nil
cons
cons
opType
38
def
9
ref
38
ref
1
ref
nil
cons
cons
opType
39
def
nil
cons
cons
opType
40
def
constTerm
41
def
"f"
11
ref
var
"f"
11
ref
var
varTerm
42
def
2
ref
appTerm
43
def
"q"
1
ref
var
varTerm
44
def
appTerm
45
def
absTerm
46
def
appTerm
47
def
"f"
11
ref
var
42
ref
6
ref
appTerm
48
def
6
ref
appTerm
49
def
absTerm
50
def
appTerm
51
def
absTerm
52
def
absTerm
53
def
defineConst
54
def
pop
55
def
pop
2
ref
assume
56
def
pop
44
ref
assume
57
def
pop
nil
"t"
1
ref
var
44
ref
nil
cons
cons
nil
cons
nil
cons
cons
37
ref
# |- t <=> t <=> T
subst
# |- q <=> q <=> T
58
def
pop
58
ref
57
ref
# |- q <=> q <=> T
# q
# |- q
eqMp
# q
# |- q <=> T
59
def
pop
nil
"t"
1
ref
var
2
ref
nil
cons
cons
nil
cons
nil
cons
cons
37
ref
# |- t <=> t <=> T
subst
# |- p <=> p <=> T
60
def
pop
60
ref
56
ref
# |- p <=> p <=> T
# p
# |- p
eqMp
# p
# |- p <=> T
61
def
pop
42
ref
refl
62
def
pop
62
ref
61
ref
app
63
def
pop
63
ref
59
ref
app
64
def
pop
"f"
11
ref
var
64
ref
abs
65
def
pop
2
ref
refl
66
def
pop
54
ref
66
ref
app
67
def
pop
44
ref
refl
68
def
pop
67
ref
68
ref
app
69
def
pop
53
ref
2
ref
appTerm
70
def
betaConv
71
def
pop
71
ref
68
ref
app
72
def
pop
52
ref
44
ref
appTerm
73
def
betaConv
74
def
pop
12
ref
70
ref
44
ref
appTerm
75
def
appTerm
76
def
refl
77
def
pop
77
ref
74
ref
app
78
def
pop
78
ref
72
ref
# |- ((\p q. (\f. f p q) = (\f. f T T)) p q <=>
#     (\q. (\f. f p q) = (\f. f T T)) q) <=>
#    (\p q. (\f. f p q) = (\f. f T T)) p q <=>
#    (\f. f p q) = (\f. f T T)
# |- (\p q. (\f. f p q) = (\f. f T T)) p q <=>
#    (\q. (\f. f p q) = (\f. f T T)) q
eqMp
# |- (\p q. (\f. f p q) = (\f. f T T)) p q <=> (\f. f p q) = (\f. f T T)
79
def
pop
12
ref
55
ref
11
ref
constTerm
80
def
2
ref
appTerm
81
def
44
ref
appTerm
82
def
appTerm
83
def
refl
84
def
pop
84
ref
79
ref
app
85
def
pop
85
ref
69
ref
# |- (p /\ q <=> (\p q. (\f. f p q) = (\f. f T T)) p q) <=>
#    p /\ q <=>
#    (\f. f p q) = (\f. f T T)
# |- p /\ q <=> (\p q. (\f. f p q) = (\f. f T T)) p q
eqMp
# |- p /\ q <=> (\f. f p q) = (\f. f T T)
86
def
pop
82
ref
refl
87
def
pop
13
ref
86
ref
app
88
def
pop
88
ref
87
ref
app
89
def
pop
89
ref
87
ref
# |- (p /\ q <=> p /\ q) <=> (\f. f p q) = (\f. f T T) <=> p /\ q
# |- p /\ q <=> p /\ q
eqMp
# |- (\f. f p q) = (\f. f T T) <=> p /\ q
90
def
pop
90
ref
65
ref
# |- (\f. f p q) = (\f. f T T) <=> p /\ q
# p, q
# |- (\f. f p q) = (\f. f T T)
eqMp
# p, q
# |- p /\ q
91
def
pop
"P"
1
ref
var
varTerm
92
def
refl
93
def
pop
54
ref
93
ref
app
94
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
nil
cons
nil
cons
cons
71
ref
# |- (\p q. (\f. f p q) = (\f. f T T)) p = (\q. (\f. f p q) = (\f. f T T))
subst
# |- (\p q. (\f. f p q) = (\f. f T T)) P = (\q. (\f. f P q) = (\f. f T T))
95
def
pop
17
ref
80
ref
92
ref
appTerm
96
def
appTerm
97
def
refl
98
def
pop
98
ref
95
ref
app
99
def
pop
99
ref
94
ref
# |- (/\) P = (\p q. (\f. f p q) = (\f. f T T)) P <=>
#    (/\) P = (\q. (\f. f P q) = (\f. f T T))
# |- (/\) P = (\p q. (\f. f p q) = (\f. f T T)) P
eqMp
# |- (/\) P = (\q. (\f. f P q) = (\f. f T T))
100
def
pop
"Q"
1
ref
var
varTerm
101
def
refl
102
def
pop
100
ref
102
ref
app
103
def
pop
"q"
1
ref
var
41
ref
"f"
11
ref
var
42
ref
92
ref
appTerm
104
def
44
ref
appTerm
105
def
absTerm
106
def
appTerm
107
def
50
ref
appTerm
108
def
absTerm
109
def
44
ref
appTerm
110
def
betaConv
111
def
pop
nil
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
nil
cons
cons
111
ref
# |- (\q. (\f. f P q) = (\f. f T T)) q <=> (\f. f P q) = (\f. f T T)
subst
# |- (\q. (\f. f P q) = (\f. f T T)) Q <=> (\f. f P Q) = (\f. f T T)
112
def
pop
12
ref
96
ref
101
ref
appTerm
113
def
appTerm
114
def
refl
115
def
pop
115
ref
112
ref
app
116
def
pop
116
ref
103
ref
# |- (P /\ Q <=> (\q. (\f. f P q) = (\f. f T T)) Q) <=>
#    P /\ Q <=>
#    (\f. f P Q) = (\f. f T T)
# |- P /\ Q <=> (\q. (\f. f P q) = (\f. f T T)) Q
eqMp
# |- P /\ Q <=> (\f. f P Q) = (\f. f T T)
117
def
pop
113
ref
assume
118
def
pop
117
ref
118
ref
# |- P /\ Q <=> (\f. f P Q) = (\f. f T T)
# P /\ Q
# |- P /\ Q
eqMp
# P /\ Q
# |- (\f. f P Q) = (\f. f T T)
119
def
pop
"p"
1
ref
var
"q"
1
ref
var
2
ref
absTerm
120
def
absTerm
121
def
refl
122
def
pop
119
ref
122
ref
app
123
def
pop
"f"
11
ref
var
104
ref
101
ref
appTerm
124
def
absTerm
125
def
42
ref
appTerm
126
def
betaConv
127
def
pop
nil
"f"
11
ref
var
121
ref
nil
cons
cons
nil
cons
nil
cons
cons
127
ref
# |- (\f. f P Q) f <=> f P Q
subst
# |- (\f. f P Q) (\p q. p) <=> (\p q. p) P Q
128
def
pop
121
ref
2
ref
appTerm
129
def
betaConv
130
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
nil
cons
nil
cons
cons
130
ref
# |- (\p q. p) p = (\q. p)
subst
# |- (\p q. p) P = (\q. P)
131
def
pop
131
ref
102
ref
app
132
def
pop
"q"
1
ref
var
92
ref
absTerm
133
def
44
ref
appTerm
134
def
betaConv
135
def
pop
nil
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
nil
cons
cons
135
ref
# |- (\q. P) q <=> P
subst
# |- (\q. P) Q <=> P
136
def
pop
12
ref
121
ref
92
ref
appTerm
137
def
101
ref
appTerm
138
def
appTerm
139
def
refl
140
def
pop
140
ref
136
ref
app
141
def
pop
141
ref
132
ref
# |- ((\p q. p) P Q <=> (\q. P) Q) <=> (\p q. p) P Q <=> P
# |- (\p q. p) P Q <=> (\q. P) Q
eqMp
# |- (\p q. p) P Q <=> P
142
def
pop
12
ref
125
ref
121
ref
appTerm
143
def
appTerm
144
def
refl
145
def
pop
145
ref
142
ref
app
146
def
pop
146
ref
128
ref
# |- ((\f. f P Q) (\p q. p) <=> (\p q. p) P Q) <=> (\f. f P Q) (\p q. p) <=> P
# |- (\f. f P Q) (\p q. p) <=> (\p q. p) P Q
eqMp
# |- (\f. f P Q) (\p q. p) <=> P
147
def
pop
13
ref
147
ref
app
148
def
pop
50
ref
42
ref
appTerm
149
def
betaConv
150
def
pop
nil
"f"
11
ref
var
121
ref
nil
cons
cons
nil
cons
nil
cons
cons
150
ref
# |- (\f. f T T) f <=> f T T
subst
# |- (\f. f T T) (\p q. p) <=> (\p q. p) T T
151
def
pop
nil
"p"
1
ref
var
6
ref
nil
cons
cons
nil
cons
nil
cons
cons
130
ref
# |- (\p q. p) p = (\q. p)
subst
# |- (\p q. p) T = (\q. T)
152
def
pop
152
ref
7
ref
app
153
def
pop
"q"
1
ref
var
6
ref
absTerm
154
def
44
ref
appTerm
155
def
betaConv
156
def
pop
nil
"q"
1
ref
var
6
ref
nil
cons
cons
nil
cons
nil
cons
cons
156
ref
# |- (\q. T) q <=> T
subst
# |- (\q. T) T <=> T
157
def
pop
12
ref
121
ref
6
ref
appTerm
158
def
6
ref
appTerm
159
def
appTerm
160
def
refl
161
def
pop
161
ref
157
ref
app
162
def
pop
162
ref
153
ref
# |- ((\p q. p) T T <=> (\q. T) T) <=> (\p q. p) T T <=> T
# |- (\p q. p) T T <=> (\q. T) T
eqMp
# |- (\p q. p) T T <=> T
163
def
pop
12
ref
50
ref
121
ref
appTerm
164
def
appTerm
165
def
refl
166
def
pop
166
ref
163
ref
app
167
def
pop
167
ref
151
ref
# |- ((\f. f T T) (\p q. p) <=> (\p q. p) T T) <=> (\f. f T T) (\p q. p) <=> T
# |- (\f. f T T) (\p q. p) <=> (\p q. p) T T
eqMp
# |- (\f. f T T) (\p q. p) <=> T
168
def
pop
148
ref
168
ref
app
169
def
pop
169
ref
123
ref
# |- ((\f. f P Q) (\p q. p) <=> (\f. f T T) (\p q. p)) <=> P <=> T
# P /\ Q
# |- (\f. f P Q) (\p q. p) <=> (\f. f T T) (\p q. p)
eqMp
# P /\ Q
# |- P <=> T
170
def
pop
13
ref
170
ref
app
171
def
pop
171
ref
93
ref
app
172
def
pop
172
ref
93
ref
# P /\ Q
# |- (P <=> P) <=> T <=> P
# |- P <=> P
eqMp
# P /\ Q
# |- T <=> P
173
def
pop
173
ref
25
ref
# P /\ Q
# |- T <=> P
# |- T
eqMp
# P /\ Q
# |- P
174
def
pop
"p"
1
ref
var
"q"
1
ref
var
44
ref
absTerm
175
def
absTerm
176
def
refl
177
def
pop
119
ref
177
ref
app
178
def
pop
nil
"f"
11
ref
var
176
ref
nil
cons
cons
nil
cons
nil
cons
cons
127
ref
# |- (\f. f P Q) f <=> f P Q
subst
# |- (\f. f P Q) (\p q. q) <=> (\p q. q) P Q
179
def
pop
176
ref
2
ref
appTerm
180
def
betaConv
181
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
nil
cons
nil
cons
cons
181
ref
# |- (\p q. q) p = (\q. q)
subst
# |- (\p q. q) P = (\q. q)
182
def
pop
182
ref
102
ref
app
183
def
pop
175
ref
44
ref
appTerm
184
def
betaConv
185
def
pop
nil
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
nil
cons
cons
185
ref
# |- (\q. q) q <=> q
subst
# |- (\q. q) Q <=> Q
186
def
pop
12
ref
176
ref
92
ref
appTerm
187
def
101
ref
appTerm
188
def
appTerm
189
def
refl
190
def
pop
190
ref
186
ref
app
191
def
pop
191
ref
183
ref
# |- ((\p q. q) P Q <=> (\q. q) Q) <=> (\p q. q) P Q <=> Q
# |- (\p q. q) P Q <=> (\q. q) Q
eqMp
# |- (\p q. q) P Q <=> Q
192
def
pop
12
ref
125
ref
176
ref
appTerm
193
def
appTerm
194
def
refl
195
def
pop
195
ref
192
ref
app
196
def
pop
196
ref
179
ref
# |- ((\f. f P Q) (\p q. q) <=> (\p q. q) P Q) <=> (\f. f P Q) (\p q. q) <=> Q
# |- (\f. f P Q) (\p q. q) <=> (\p q. q) P Q
eqMp
# |- (\f. f P Q) (\p q. q) <=> Q
197
def
pop
13
ref
197
ref
app
198
def
pop
nil
"f"
11
ref
var
176
ref
nil
cons
cons
nil
cons
nil
cons
cons
150
ref
# |- (\f. f T T) f <=> f T T
subst
# |- (\f. f T T) (\p q. q) <=> (\p q. q) T T
199
def
pop
nil
"p"
1
ref
var
6
ref
nil
cons
cons
nil
cons
nil
cons
cons
181
ref
# |- (\p q. q) p = (\q. q)
subst
# |- (\p q. q) T = (\q. q)
200
def
pop
200
ref
7
ref
app
201
def
pop
nil
"q"
1
ref
var
6
ref
nil
cons
cons
nil
cons
nil
cons
cons
185
ref
# |- (\q. q) q <=> q
subst
# |- (\q. q) T <=> T
202
def
pop
12
ref
176
ref
6
ref
appTerm
203
def
6
ref
appTerm
204
def
appTerm
205
def
refl
206
def
pop
206
ref
202
ref
app
207
def
pop
207
ref
201
ref
# |- ((\p q. q) T T <=> (\q. q) T) <=> (\p q. q) T T <=> T
# |- (\p q. q) T T <=> (\q. q) T
eqMp
# |- (\p q. q) T T <=> T
208
def
pop
12
ref
50
ref
176
ref
appTerm
209
def
appTerm
210
def
refl
211
def
pop
211
ref
208
ref
app
212
def
pop
212
ref
199
ref
# |- ((\f. f T T) (\p q. q) <=> (\p q. q) T T) <=> (\f. f T T) (\p q. q) <=> T
# |- (\f. f T T) (\p q. q) <=> (\p q. q) T T
eqMp
# |- (\f. f T T) (\p q. q) <=> T
213
def
pop
198
ref
213
ref
app
214
def
pop
214
ref
178
ref
# |- ((\f. f P Q) (\p q. q) <=> (\f. f T T) (\p q. q)) <=> Q <=> T
# P /\ Q
# |- (\f. f P Q) (\p q. q) <=> (\f. f T T) (\p q. q)
eqMp
# P /\ Q
# |- Q <=> T
215
def
pop
13
ref
215
ref
app
216
def
pop
216
ref
102
ref
app
217
def
pop
217
ref
102
ref
# P /\ Q
# |- (Q <=> Q) <=> T <=> Q
# |- Q <=> Q
eqMp
# P /\ Q
# |- T <=> Q
218
def
pop
218
ref
25
ref
# P /\ Q
# |- T <=> Q
# |- T
eqMp
# P /\ Q
# |- Q
219
def
pop
"==>"
"p"
1
ref
var
"q"
1
ref
var
83
ref
2
ref
appTerm
220
def
absTerm
221
def
absTerm
222
def
defineConst
223
def
pop
224
def
pop
223
ref
66
ref
app
225
def
pop
225
ref
68
ref
app
226
def
pop
222
ref
2
ref
appTerm
227
def
betaConv
228
def
pop
228
ref
68
ref
app
229
def
pop
221
ref
44
ref
appTerm
230
def
betaConv
231
def
pop
12
ref
227
ref
44
ref
appTerm
232
def
appTerm
233
def
refl
234
def
pop
234
ref
231
ref
app
235
def
pop
235
ref
229
ref
# |- ((\p q. p /\ q <=> p) p q <=> (\q. p /\ q <=> p) q) <=>
#    (\p q. p /\ q <=> p) p q <=>
#    p /\ q <=>
#    p
# |- (\p q. p /\ q <=> p) p q <=> (\q. p /\ q <=> p) q
eqMp
# |- (\p q. p /\ q <=> p) p q <=> p /\ q <=> p
236
def
pop
12
ref
224
ref
11
ref
constTerm
237
def
2
ref
appTerm
238
def
44
ref
appTerm
239
def
appTerm
240
def
refl
241
def
pop
241
ref
236
ref
app
242
def
pop
242
ref
226
ref
# |- (p ==> q <=> (\p q. p /\ q <=> p) p q) <=> p ==> q <=> p /\ q <=> p
# |- p ==> q <=> (\p q. p /\ q <=> p) p q
eqMp
# |- p ==> q <=> p /\ q <=> p
243
def
pop
239
ref
assume
244
def
pop
243
ref
244
ref
# |- p ==> q <=> p /\ q <=> p
# p ==> q
# |- p ==> q
eqMp
# p ==> q
# |- p /\ q <=> p
245
def
pop
13
ref
245
ref
app
246
def
pop
246
ref
87
ref
app
247
def
pop
247
ref
87
ref
# p ==> q
# |- (p /\ q <=> p /\ q) <=> p <=> p /\ q
# |- p /\ q <=> p /\ q
eqMp
# p ==> q
# |- p <=> p /\ q
248
def
pop
248
ref
56
ref
# p ==> q
# |- p <=> p /\ q
# p
# |- p
eqMp
# p, p ==> q
# |- p /\ q
249
def
pop
nil
"P"
1
ref
var
2
ref
nil
cons
cons
"Q"
1
ref
var
44
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
219
ref
# P /\ Q
# |- Q
subst
# p /\ q
# |- q
250
def
pop
249
ref
250
ref
deductAntisym
251
def
pop
251
ref
249
ref
# p, p ==> q
# |- p /\ q <=> q
# p, p ==> q
# |- p /\ q
eqMp
# p, p ==> q
# |- q
252
def
pop
239
ref
refl
253
def
pop
13
ref
243
ref
app
254
def
pop
254
ref
253
ref
app
255
def
pop
255
ref
253
ref
# |- (p ==> q <=> p ==> q) <=> (p /\ q <=> p) <=> p ==> q
# |- p ==> q <=> p ==> q
eqMp
# |- (p /\ q <=> p) <=> p ==> q
256
def
pop
12
ref
2
ref
appTerm
257
def
44
ref
appTerm
258
def
assume
259
def
pop
259
ref
56
ref
# p <=> q
# |- p <=> q
# p
# |- p
eqMp
# p, p <=> q
# |- q
260
def
pop
56
ref
91
ref
deductAntisym
261
def
pop
260
ref
91
ref
deductAntisym
262
def
pop
262
ref
260
ref
# p, p <=> q
# |- q <=> p /\ q
# p, p <=> q
# |- q
eqMp
# p, p <=> q
# |- p /\ q
263
def
pop
82
ref
assume
264
def
pop
nil
"P"
1
ref
var
2
ref
nil
cons
cons
"Q"
1
ref
var
44
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# p /\ q
# |- p
265
def
pop
264
ref
265
ref
deductAntisym
266
def
pop
263
ref
265
ref
deductAntisym
267
def
pop
256
ref
267
ref
# |- (p /\ q <=> p) <=> p ==> q
# p <=> q
# |- p /\ q <=> p
eqMp
# p <=> q
# |- p ==> q
268
def
pop
nil
"p"
1
ref
var
258
ref
nil
cons
cons
"q"
1
ref
var
239
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# p <=> q, p ==> q
# |- (p <=> q) /\ (p ==> q)
269
def
pop
259
ref
269
ref
deductAntisym
270
def
pop
268
ref
269
ref
deductAntisym
271
def
pop
271
ref
268
ref
# p <=> q
# |- p ==> q <=> (p <=> q) /\ (p ==> q)
# p <=> q
# |- p ==> q
eqMp
# p <=> q
# |- (p <=> q) /\ (p ==> q)
272
def
pop
80
ref
258
ref
appTerm
273
def
239
ref
appTerm
274
def
assume
275
def
pop
nil
"P"
1
ref
var
258
ref
nil
cons
cons
"Q"
1
ref
var
239
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (p <=> q) /\ (p ==> q)
# |- p <=> q
276
def
pop
275
ref
276
ref
deductAntisym
277
def
pop
272
ref
276
ref
deductAntisym
278
def
pop
nil
"p"
1
ref
var
258
ref
nil
cons
cons
"q"
1
ref
var
239
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((p <=> q) /\ (p ==> q) <=> p <=> q) <=> (p <=> q) ==> p ==> q
279
def
pop
279
ref
278
ref
# |- ((p <=> q) /\ (p ==> q) <=> p <=> q) <=> (p <=> q) ==> p ==> q
# |- (p <=> q) /\ (p ==> q) <=> p <=> q
eqMp
# |- (p <=> q) ==> p ==> q
280
def
pop
13
ref
259
ref
app
281
def
pop
281
ref
66
ref
app
282
def
pop
282
ref
66
ref
# p <=> q
# |- (p <=> p) <=> q <=> p
# |- p <=> p
eqMp
# p <=> q
# |- q <=> p
283
def
pop
283
ref
57
ref
# p <=> q
# |- q <=> p
# q
# |- q
eqMp
# q, p <=> q
# |- p
284
def
pop
nil
"p"
1
ref
var
44
ref
nil
cons
cons
"q"
1
ref
var
2
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# p, q
# |- q /\ p
285
def
pop
57
ref
285
ref
deductAntisym
286
def
pop
284
ref
285
ref
deductAntisym
287
def
pop
287
ref
284
ref
# q, p <=> q
# |- p <=> q /\ p
# q, p <=> q
# |- p
eqMp
# q, p <=> q
# |- q /\ p
288
def
pop
80
ref
44
ref
appTerm
289
def
2
ref
appTerm
290
def
assume
291
def
pop
nil
"P"
1
ref
var
44
ref
nil
cons
cons
"Q"
1
ref
var
2
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# q /\ p
# |- q
292
def
pop
291
ref
292
ref
deductAntisym
293
def
pop
288
ref
292
ref
deductAntisym
294
def
pop
nil
"p"
1
ref
var
44
ref
nil
cons
cons
"q"
1
ref
var
2
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- (q /\ p <=> q) <=> q ==> p
295
def
pop
295
ref
294
ref
# |- (q /\ p <=> q) <=> q ==> p
# p <=> q
# |- q /\ p <=> q
eqMp
# p <=> q
# |- q ==> p
296
def
pop
nil
"p"
1
ref
var
258
ref
nil
cons
cons
"q"
1
ref
var
237
ref
44
ref
appTerm
297
def
2
ref
appTerm
298
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# p <=> q, q ==> p
# |- (p <=> q) /\ (q ==> p)
299
def
pop
259
ref
299
ref
deductAntisym
300
def
pop
296
ref
299
ref
deductAntisym
301
def
pop
301
ref
296
ref
# p <=> q
# |- q ==> p <=> (p <=> q) /\ (q ==> p)
# p <=> q
# |- q ==> p
eqMp
# p <=> q
# |- (p <=> q) /\ (q ==> p)
302
def
pop
273
ref
298
ref
appTerm
303
def
assume
304
def
pop
nil
"P"
1
ref
var
258
ref
nil
cons
cons
"Q"
1
ref
var
298
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (p <=> q) /\ (q ==> p)
# |- p <=> q
305
def
pop
304
ref
305
ref
deductAntisym
306
def
pop
302
ref
305
ref
deductAntisym
307
def
pop
nil
"p"
1
ref
var
258
ref
nil
cons
cons
"q"
1
ref
var
298
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((p <=> q) /\ (q ==> p) <=> p <=> q) <=> (p <=> q) ==> q ==> p
308
def
pop
308
ref
307
ref
# |- ((p <=> q) /\ (q ==> p) <=> p <=> q) <=> (p <=> q) ==> q ==> p
# |- (p <=> q) /\ (q ==> p) <=> p <=> q
eqMp
# |- (p <=> q) ==> q ==> p
309
def
pop
244
ref
252
ref
deductAntisym
310
def
pop
56
ref
252
ref
deductAntisym
311
def
pop
297
ref
"r"
1
ref
var
varTerm
312
def
appTerm
313
def
assume
314
def
pop
nil
"p"
1
ref
var
44
ref
nil
cons
cons
"q"
1
ref
var
312
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# q, q ==> r
# |- r
315
def
pop
314
ref
315
ref
deductAntisym
316
def
pop
252
ref
315
ref
deductAntisym
317
def
pop
317
ref
252
ref
# p, p ==> q, q ==> r
# |- q <=> r
# p, p ==> q
# |- q
eqMp
# p, p ==> q, q ==> r
# |- r
318
def
pop
nil
"p"
1
ref
var
2
ref
nil
cons
cons
"q"
1
ref
var
312
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# p, r
# |- p /\ r
319
def
pop
56
ref
319
ref
deductAntisym
320
def
pop
318
ref
319
ref
deductAntisym
321
def
pop
321
ref
318
ref
# p, p ==> q, q ==> r
# |- r <=> p /\ r
# p, p ==> q, q ==> r
# |- r
eqMp
# p, p ==> q, q ==> r
# |- p /\ r
322
def
pop
81
ref
312
ref
appTerm
323
def
assume
324
def
pop
nil
"P"
1
ref
var
2
ref
nil
cons
cons
"Q"
1
ref
var
312
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# p /\ r
# |- p
325
def
pop
324
ref
325
ref
deductAntisym
326
def
pop
322
ref
325
ref
deductAntisym
327
def
pop
nil
"p"
1
ref
var
2
ref
nil
cons
cons
"q"
1
ref
var
312
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- (p /\ r <=> p) <=> p ==> r
328
def
pop
328
ref
327
ref
# |- (p /\ r <=> p) <=> p ==> r
# p ==> q, q ==> r
# |- p /\ r <=> p
eqMp
# p ==> q, q ==> r
# |- p ==> r
329
def
pop
nil
"p"
1
ref
var
313
ref
nil
cons
cons
"q"
1
ref
var
238
ref
312
ref
appTerm
330
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# p ==> r, q ==> r
# |- (q ==> r) /\ (p ==> r)
331
def
pop
314
ref
331
ref
deductAntisym
332
def
pop
329
ref
331
ref
deductAntisym
333
def
pop
333
ref
329
ref
# p ==> q, q ==> r
# |- p ==> r <=> (q ==> r) /\ (p ==> r)
# p ==> q, q ==> r
# |- p ==> r
eqMp
# p ==> q, q ==> r
# |- (q ==> r) /\ (p ==> r)
334
def
pop
80
ref
313
ref
appTerm
335
def
330
ref
appTerm
336
def
assume
337
def
pop
nil
"P"
1
ref
var
313
ref
nil
cons
cons
"Q"
1
ref
var
330
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (q ==> r) /\ (p ==> r)
# |- q ==> r
338
def
pop
337
ref
338
ref
deductAntisym
339
def
pop
334
ref
338
ref
deductAntisym
340
def
pop
nil
"p"
1
ref
var
313
ref
nil
cons
cons
"q"
1
ref
var
330
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((q ==> r) /\ (p ==> r) <=> q ==> r) <=> (q ==> r) ==> p ==> r
341
def
pop
341
ref
340
ref
# |- ((q ==> r) /\ (p ==> r) <=> q ==> r) <=> (q ==> r) ==> p ==> r
# p ==> q
# |- (q ==> r) /\ (p ==> r) <=> q ==> r
eqMp
# p ==> q
# |- (q ==> r) ==> p ==> r
342
def
pop
nil
"p"
1
ref
var
239
ref
nil
cons
cons
"q"
1
ref
var
237
ref
313
ref
appTerm
343
def
330
ref
appTerm
344
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# p ==> q, (q ==> r) ==> p ==> r
# |- (p ==> q) /\ ((q ==> r) ==> p ==> r)
345
def
pop
244
ref
345
ref
deductAntisym
346
def
pop
342
ref
345
ref
deductAntisym
347
def
pop
347
ref
342
ref
# p ==> q
# |- (q ==> r) ==> p ==> r <=> (p ==> q) /\ ((q ==> r) ==> p ==> r)
# p ==> q
# |- (q ==> r) ==> p ==> r
eqMp
# p ==> q
# |- (p ==> q) /\ ((q ==> r) ==> p ==> r)
348
def
pop
80
ref
239
ref
appTerm
349
def
344
ref
appTerm
350
def
assume
351
def
pop
nil
"P"
1
ref
var
239
ref
nil
cons
cons
"Q"
1
ref
var
344
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (p ==> q) /\ ((q ==> r) ==> p ==> r)
# |- p ==> q
352
def
pop
351
ref
352
ref
deductAntisym
353
def
pop
348
ref
352
ref
deductAntisym
354
def
pop
nil
"p"
1
ref
var
239
ref
nil
cons
cons
"q"
1
ref
var
344
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((p ==> q) /\ ((q ==> r) ==> p ==> r) <=> p ==> q) <=>
#    (p ==> q) ==> (q ==> r) ==> p ==> r
355
def
pop
355
ref
354
ref
# |- ((p ==> q) /\ ((q ==> r) ==> p ==> r) <=> p ==> q) <=>
#    (p ==> q) ==> (q ==> r) ==> p ==> r
# |- (p ==> q) /\ ((q ==> r) ==> p ==> r) <=> p ==> q
eqMp
# |- (p ==> q) ==> (q ==> r) ==> p ==> r
356
def
pop
"!"
"P"
9
ref
"A"
varType
357
def
1
ref
nil
cons
cons
opType
358
def
var
8
ref
9
ref
358
ref
9
ref
358
ref
1
ref
nil
cons
cons
opType
359
def
nil
cons
cons
opType
360
def
constTerm
361
def
"P"
358
ref
var
varTerm
362
def
appTerm
363
def
"x"
357
ref
var
6
ref
absTerm
364
def
appTerm
365
def
absTerm
366
def
defineConst
367
def
pop
368
def
pop
368
ref
359
ref
constTerm
369
def
362
ref
appTerm
370
def
assume
371
def
pop
362
ref
refl
372
def
pop
367
ref
372
ref
app
373
def
pop
373
ref
371
ref
# |- (!) P <=> (\P. P = (\x. T)) P
# (!) P
# |- (!) P
eqMp
# (!) P
# |- (\P. P = (\x. T)) P
374
def
pop
366
ref
362
ref
appTerm
375
def
betaConv
376
def
pop
376
ref
374
ref
# |- (\P. P = (\x. T)) P <=> P = (\x. T)
# (!) P
# |- (\P. P = (\x. T)) P
eqMp
# (!) P
# |- P = (\x. T)
377
def
pop
"x"
357
ref
var
varTerm
378
def
refl
379
def
pop
377
ref
379
ref
app
380
def
pop
364
ref
378
ref
appTerm
381
def
betaConv
382
def
pop
12
ref
362
ref
378
ref
appTerm
383
def
appTerm
384
def
refl
385
def
pop
385
ref
382
ref
app
386
def
pop
386
ref
380
ref
# |- (P x <=> (\x. T) x) <=> P x <=> T
# (!) P
# |- P x <=> (\x. T) x
eqMp
# (!) P
# |- P x <=> T
387
def
pop
383
ref
refl
388
def
pop
13
ref
387
ref
app
389
def
pop
389
ref
388
ref
app
390
def
pop
390
ref
388
ref
# (!) P
# |- (P x <=> P x) <=> T <=> P x
# |- P x <=> P x
eqMp
# (!) P
# |- T <=> P x
391
def
pop
391
ref
25
ref
# (!) P
# |- T <=> P x
# |- T
eqMp
# (!) P
# |- P x
392
def
pop
nil
"p"
1
ref
var
370
ref
nil
cons
cons
"q"
1
ref
var
383
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# (!) P, P x
# |- (!) P /\ P x
393
def
pop
371
ref
393
ref
deductAntisym
394
def
pop
392
ref
393
ref
deductAntisym
395
def
pop
395
ref
392
ref
# (!) P
# |- P x <=> (!) P /\ P x
# (!) P
# |- P x
eqMp
# (!) P
# |- (!) P /\ P x
396
def
pop
80
ref
370
ref
appTerm
397
def
383
ref
appTerm
398
def
assume
399
def
pop
nil
"P"
1
ref
var
370
ref
nil
cons
cons
"Q"
1
ref
var
383
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (!) P /\ P x
# |- (!) P
400
def
pop
399
ref
400
ref
deductAntisym
401
def
pop
396
ref
400
ref
deductAntisym
402
def
pop
nil
"p"
1
ref
var
370
ref
nil
cons
cons
"q"
1
ref
var
383
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((!) P /\ P x <=> (!) P) <=> (!) P ==> P x
403
def
pop
403
ref
402
ref
# |- ((!) P /\ P x <=> (!) P) <=> (!) P ==> P x
# |- (!) P /\ P x <=> (!) P
eqMp
# |- (!) P ==> P x
404
def
pop
365
ref
assume
405
def
pop
12
ref
370
ref
appTerm
406
def
refl
407
def
pop
407
ref
376
ref
app
408
def
pop
408
ref
373
ref
# |- ((!) P <=> (\P. P = (\x. T)) P) <=> (!) P <=> P = (\x. T)
# |- (!) P <=> (\P. P = (\x. T)) P
eqMp
# |- (!) P <=> P = (\x. T)
409
def
pop
370
ref
refl
410
def
pop
13
ref
409
ref
app
411
def
pop
411
ref
410
ref
app
412
def
pop
412
ref
410
ref
# |- ((!) P <=> (!) P) <=> P = (\x. T) <=> (!) P
# |- (!) P <=> (!) P
eqMp
# |- P = (\x. T) <=> (!) P
413
def
pop
413
ref
405
ref
# |- P = (\x. T) <=> (!) P
# P = (\x. T)
# |- P = (\x. T)
eqMp
# P = (\x. T)
# |- (!) P
414
def
pop
"?"
"P"
358
ref
var
368
ref
15
ref
constTerm
415
def
"q"
1
ref
var
237
ref
369
ref
"x"
357
ref
var
237
ref
383
ref
appTerm
416
def
44
ref
appTerm
417
def
absTerm
418
def
appTerm
419
def
appTerm
420
def
44
ref
appTerm
421
def
absTerm
422
def
appTerm
423
def
absTerm
424
def
defineConst
425
def
pop
426
def
pop
425
ref
372
ref
app
427
def
pop
424
ref
362
ref
appTerm
428
def
betaConv
429
def
pop
12
ref
426
ref
359
ref
constTerm
430
def
362
ref
appTerm
431
def
appTerm
432
def
refl
433
def
pop
433
ref
429
ref
app
434
def
pop
434
ref
427
ref
# |- ((?) P <=> (\P. !q. (!x. P x ==> q) ==> q) P) <=>
#    (?) P <=>
#    (!q. (!x. P x ==> q) ==> q)
# |- (?) P <=> (\P. !q. (!x. P x ==> q) ==> q) P
eqMp
# |- (?) P <=> (!q. (!x. P x ==> q) ==> q)
435
def
pop
369
ref
"x"
357
ref
var
416
ref
101
ref
appTerm
436
def
absTerm
437
def
appTerm
438
def
assume
439
def
pop
nil
"P"
358
ref
var
437
ref
nil
cons
cons
"x"
357
ref
var
378
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
404
ref
# |- (!) P ==> P x
subst
# |- (!x. P x ==> Q) ==> (\x. P x ==> Q) x
440
def
pop
nil
"p"
1
ref
var
438
ref
nil
cons
cons
"q"
1
ref
var
437
ref
378
ref
appTerm
441
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# !x. P x ==> Q, (!x. P x ==> Q) ==> (\x. P x ==> Q) x
# |- (\x. P x ==> Q) x
442
def
pop
440
ref
442
ref
deductAntisym
443
def
pop
443
ref
440
ref
# !x. P x ==> Q
# |- (!x. P x ==> Q) ==> (\x. P x ==> Q) x <=> (\x. P x ==> Q) x
# |- (!x. P x ==> Q) ==> (\x. P x ==> Q) x
eqMp
# !x. P x ==> Q
# |- (\x. P x ==> Q) x
444
def
pop
439
ref
444
ref
deductAntisym
445
def
pop
441
ref
betaConv
446
def
pop
446
ref
444
ref
# |- (\x. P x ==> Q) x <=> P x ==> Q
# !x. P x ==> Q
# |- (\x. P x ==> Q) x
eqMp
# !x. P x ==> Q
# |- P x ==> Q
447
def
pop
383
ref
assume
448
def
pop
nil
"p"
1
ref
var
383
ref
nil
cons
cons
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# P x, P x ==> Q
# |- Q
449
def
pop
447
ref
449
ref
deductAntisym
450
def
pop
450
ref
447
ref
# !x. P x ==> Q, P x
# |- P x ==> Q <=> Q
# !x. P x ==> Q
# |- P x ==> Q
eqMp
# !x. P x ==> Q, P x
# |- Q
451
def
pop
448
ref
451
ref
deductAntisym
452
def
pop
nil
"p"
1
ref
var
438
ref
nil
cons
cons
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# Q, !x. P x ==> Q
# |- (!x. P x ==> Q) /\ Q
453
def
pop
439
ref
453
ref
deductAntisym
454
def
pop
451
ref
453
ref
deductAntisym
455
def
pop
455
ref
451
ref
# !x. P x ==> Q, P x
# |- Q <=> (!x. P x ==> Q) /\ Q
# !x. P x ==> Q, P x
# |- Q
eqMp
# !x. P x ==> Q, P x
# |- (!x. P x ==> Q) /\ Q
456
def
pop
80
ref
438
ref
appTerm
457
def
101
ref
appTerm
458
def
assume
459
def
pop
nil
"P"
1
ref
var
438
ref
nil
cons
cons
"Q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (!x. P x ==> Q) /\ Q
# |- !x. P x ==> Q
460
def
pop
459
ref
460
ref
deductAntisym
461
def
pop
456
ref
460
ref
deductAntisym
462
def
pop
nil
"p"
1
ref
var
438
ref
nil
cons
cons
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((!x. P x ==> Q) /\ Q <=> (!x. P x ==> Q)) <=> (!x. P x ==> Q) ==> Q
463
def
pop
463
ref
462
ref
# |- ((!x. P x ==> Q) /\ Q <=> (!x. P x ==> Q)) <=> (!x. P x ==> Q) ==> Q
# P x
# |- (!x. P x ==> Q) /\ Q <=> (!x. P x ==> Q)
eqMp
# P x
# |- (!x. P x ==> Q) ==> Q
464
def
pop
"A"
1
ref
nil
cons
cons
nil
cons
nil
nil
cons
cons
414
ref
subst
465
def
pop
nil
"P"
10
ref
var
"Q"
1
ref
var
237
ref
438
ref
appTerm
466
def
101
ref
appTerm
467
def
absTerm
468
def
nil
cons
cons
nil
cons
nil
cons
cons
465
ref
# P = (\x. T)
# |- (!) P
subst
# (\Q. (!x. P x ==> Q) ==> Q) = (\x. T)
# |- !Q. (!x. P x ==> Q) ==> Q
469
def
pop
nil
"t"
1
ref
var
467
ref
nil
cons
cons
nil
cons
nil
cons
cons
37
ref
# |- t <=> t <=> T
subst
# |- (!x. P x ==> Q) ==> Q <=> (!x. P x ==> Q) ==> Q <=> T
470
def
pop
470
ref
464
ref
# |- (!x. P x ==> Q) ==> Q <=> (!x. P x ==> Q) ==> Q <=> T
# P x
# |- (!x. P x ==> Q) ==> Q
eqMp
# P x
# |- (!x. P x ==> Q) ==> Q <=> T
471
def
pop
"Q"
1
ref
var
471
ref
abs
472
def
pop
472
ref
469
ref
deductAntisym
473
def
pop
473
ref
472
ref
# P x
# |- (\Q. (!x. P x ==> Q) ==> Q) = (\Q. T) <=> (!Q. (!x. P x ==> Q) ==> Q)
# P x
# |- (\Q. (!x. P x ==> Q) ==> Q) = (\Q. T)
eqMp
# P x
# |- !Q. (!x. P x ==> Q) ==> Q
474
def
pop
431
ref
refl
475
def
pop
13
ref
435
ref
app
476
def
pop
476
ref
475
ref
app
477
def
pop
477
ref
475
ref
# |- ((?) P <=> (?) P) <=> (!q. (!x. P x ==> q) ==> q) <=> (?) P
# |- (?) P <=> (?) P
eqMp
# |- (!q. (!x. P x ==> q) ==> q) <=> (?) P
478
def
pop
478
ref
474
ref
# |- (!q. (!x. P x ==> q) ==> q) <=> (?) P
# P x
# |- !Q. (!x. P x ==> Q) ==> Q
eqMp
# P x
# |- (?) P
479
def
pop
nil
"p"
1
ref
var
431
ref
nil
cons
cons
"q"
1
ref
var
423
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
309
ref
# |- (p <=> q) ==> q ==> p
subst
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q))
#    ==> (!q. (!x. P x ==> q) ==> q)
#    ==> (?) P
480
def
pop
nil
"p"
1
ref
var
432
ref
423
ref
appTerm
481
def
nil
cons
cons
"q"
1
ref
var
237
ref
423
ref
appTerm
482
def
431
ref
appTerm
483
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# (?) P <=> (!q. (!x. P x ==> q) ==> q),
# ((?) P <=> (!q. (!x. P x ==> q) ==> q))
# ==> (!q. (!x. P x ==> q) ==> q)
# ==> (?) P
# |- (!q. (!x. P x ==> q) ==> q) ==> (?) P
484
def
pop
480
ref
484
ref
deductAntisym
485
def
pop
485
ref
480
ref
# (?) P <=> (!q. (!x. P x ==> q) ==> q)
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q))
#    ==> (!q. (!x. P x ==> q) ==> q)
#    ==> (?) P <=>
#    (!q. (!x. P x ==> q) ==> q) ==> (?) P
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q))
#    ==> (!q. (!x. P x ==> q) ==> q)
#    ==> (?) P
eqMp
# (?) P <=> (!q. (!x. P x ==> q) ==> q)
# |- (!q. (!x. P x ==> q) ==> q) ==> (?) P
486
def
pop
435
ref
486
ref
deductAntisym
487
def
pop
487
ref
435
ref
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q)) <=>
#    (!q. (!x. P x ==> q) ==> q) ==> (?) P
# |- (?) P <=> (!q. (!x. P x ==> q) ==> q)
eqMp
# |- (!q. (!x. P x ==> q) ==> q) ==> (?) P
488
def
pop
nil
"p"
1
ref
var
431
ref
nil
cons
cons
"q"
1
ref
var
423
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
280
ref
# |- (p <=> q) ==> p ==> q
subst
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q))
#    ==> (?) P
#    ==> (!q. (!x. P x ==> q) ==> q)
489
def
pop
nil
"p"
1
ref
var
481
ref
nil
cons
cons
"q"
1
ref
var
237
ref
431
ref
appTerm
490
def
423
ref
appTerm
491
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# (?) P <=> (!q. (!x. P x ==> q) ==> q),
# ((?) P <=> (!q. (!x. P x ==> q) ==> q))
# ==> (?) P
# ==> (!q. (!x. P x ==> q) ==> q)
# |- (?) P ==> (!q. (!x. P x ==> q) ==> q)
492
def
pop
489
ref
492
ref
deductAntisym
493
def
pop
493
ref
489
ref
# (?) P <=> (!q. (!x. P x ==> q) ==> q)
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q))
#    ==> (?) P
#    ==> (!q. (!x. P x ==> q) ==> q) <=>
#    (?) P ==> (!q. (!x. P x ==> q) ==> q)
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q))
#    ==> (?) P
#    ==> (!q. (!x. P x ==> q) ==> q)
eqMp
# (?) P <=> (!q. (!x. P x ==> q) ==> q)
# |- (?) P ==> (!q. (!x. P x ==> q) ==> q)
494
def
pop
435
ref
494
ref
deductAntisym
495
def
pop
495
ref
435
ref
# |- ((?) P <=> (!q. (!x. P x ==> q) ==> q)) <=>
#    (?) P ==> (!q. (!x. P x ==> q) ==> q)
# |- (?) P <=> (!q. (!x. P x ==> q) ==> q)
eqMp
# |- (?) P ==> (!q. (!x. P x ==> q) ==> q)
496
def
pop
431
ref
assume
497
def
pop
nil
"p"
1
ref
var
431
ref
nil
cons
cons
"q"
1
ref
var
423
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# (?) P, (?) P ==> (!q. (!x. P x ==> q) ==> q)
# |- !q. (!x. P x ==> q) ==> q
498
def
pop
496
ref
498
ref
deductAntisym
499
def
pop
499
ref
496
ref
# (?) P
# |- (?) P ==> (!q. (!x. P x ==> q) ==> q) <=> (!q. (!x. P x ==> q) ==> q)
# |- (?) P ==> (!q. (!x. P x ==> q) ==> q)
eqMp
# (?) P
# |- !q. (!x. P x ==> q) ==> q
500
def
pop
497
ref
500
ref
deductAntisym
501
def
pop
"A"
1
ref
nil
cons
cons
nil
cons
nil
nil
cons
cons
404
ref
subst
502
def
pop
nil
"P"
10
ref
var
422
ref
nil
cons
cons
"x"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
502
ref
# |- (!) P ==> P x
subst
# |- (!q. (!x. P x ==> q) ==> q) ==> (\q. (!x. P x ==> q) ==> q) Q
503
def
pop
nil
"p"
1
ref
var
423
ref
nil
cons
cons
"q"
1
ref
var
422
ref
101
ref
appTerm
504
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# !q. (!x. P x ==> q) ==> q,
# (!q. (!x. P x ==> q) ==> q) ==> (\q. (!x. P x ==> q) ==> q) Q
# |- (\q. (!x. P x ==> q) ==> q) Q
505
def
pop
503
ref
505
ref
deductAntisym
506
def
pop
506
ref
503
ref
# !q. (!x. P x ==> q) ==> q
# |- (!q. (!x. P x ==> q) ==> q) ==> (\q. (!x. P x ==> q) ==> q) Q <=>
#    (\q. (!x. P x ==> q) ==> q) Q
# |- (!q. (!x. P x ==> q) ==> q) ==> (\q. (!x. P x ==> q) ==> q) Q
eqMp
# !q. (!x. P x ==> q) ==> q
# |- (\q. (!x. P x ==> q) ==> q) Q
507
def
pop
500
ref
507
ref
deductAntisym
508
def
pop
508
ref
500
ref
# (?) P
# |- (!q. (!x. P x ==> q) ==> q) <=> (\q. (!x. P x ==> q) ==> q) Q
# (?) P
# |- !q. (!x. P x ==> q) ==> q
eqMp
# (?) P
# |- (\q. (!x. P x ==> q) ==> q) Q
509
def
pop
422
ref
44
ref
appTerm
510
def
betaConv
511
def
pop
nil
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
nil
cons
cons
511
ref
# |- (\q. (!x. P x ==> q) ==> q) q <=> (!x. P x ==> q) ==> q
subst
# |- (\q. (!x. P x ==> q) ==> q) Q <=> (!x. P x ==> Q) ==> Q
512
def
pop
512
ref
509
ref
# |- (\q. (!x. P x ==> q) ==> q) Q <=> (!x. P x ==> Q) ==> Q
# (?) P
# |- (\q. (!x. P x ==> q) ==> q) Q
eqMp
# (?) P
# |- (!x. P x ==> Q) ==> Q
513
def
pop
nil
"p"
1
ref
var
438
ref
nil
cons
cons
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# !x. P x ==> Q, (!x. P x ==> Q) ==> Q
# |- Q
514
def
pop
513
ref
514
ref
deductAntisym
515
def
pop
515
ref
513
ref
# !x. P x ==> Q, (?) P
# |- (!x. P x ==> Q) ==> Q <=> Q
# (?) P
# |- (!x. P x ==> Q) ==> Q
eqMp
# !x. P x ==> Q, (?) P
# |- Q
516
def
pop
439
ref
516
ref
deductAntisym
517
def
pop
nil
"p"
1
ref
var
431
ref
nil
cons
cons
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# Q, (?) P
# |- (?) P /\ Q
518
def
pop
497
ref
518
ref
deductAntisym
519
def
pop
516
ref
518
ref
deductAntisym
520
def
pop
520
ref
516
ref
# !x. P x ==> Q, (?) P
# |- Q <=> (?) P /\ Q
# !x. P x ==> Q, (?) P
# |- Q
eqMp
# !x. P x ==> Q, (?) P
# |- (?) P /\ Q
521
def
pop
80
ref
431
ref
appTerm
522
def
101
ref
appTerm
523
def
assume
524
def
pop
nil
"P"
1
ref
var
431
ref
nil
cons
cons
"Q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (?) P /\ Q
# |- (?) P
525
def
pop
524
ref
525
ref
deductAntisym
526
def
pop
521
ref
525
ref
deductAntisym
527
def
pop
nil
"p"
1
ref
var
431
ref
nil
cons
cons
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((?) P /\ Q <=> (?) P) <=> (?) P ==> Q
528
def
pop
528
ref
527
ref
# |- ((?) P /\ Q <=> (?) P) <=> (?) P ==> Q
# !x. P x ==> Q
# |- (?) P /\ Q <=> (?) P
eqMp
# !x. P x ==> Q
# |- (?) P ==> Q
529
def
pop
nil
"p"
1
ref
var
438
ref
nil
cons
cons
"q"
1
ref
var
490
ref
101
ref
appTerm
530
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# !x. P x ==> Q, (?) P ==> Q
# |- (!x. P x ==> Q) /\ ((?) P ==> Q)
531
def
pop
439
ref
531
ref
deductAntisym
532
def
pop
529
ref
531
ref
deductAntisym
533
def
pop
533
ref
529
ref
# !x. P x ==> Q
# |- (?) P ==> Q <=> (!x. P x ==> Q) /\ ((?) P ==> Q)
# !x. P x ==> Q
# |- (?) P ==> Q
eqMp
# !x. P x ==> Q
# |- (!x. P x ==> Q) /\ ((?) P ==> Q)
534
def
pop
457
ref
530
ref
appTerm
535
def
assume
536
def
pop
nil
"P"
1
ref
var
438
ref
nil
cons
cons
"Q"
1
ref
var
530
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (!x. P x ==> Q) /\ ((?) P ==> Q)
# |- !x. P x ==> Q
537
def
pop
536
ref
537
ref
deductAntisym
538
def
pop
534
ref
537
ref
deductAntisym
539
def
pop
nil
"p"
1
ref
var
438
ref
nil
cons
cons
"q"
1
ref
var
530
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((!x. P x ==> Q) /\ ((?) P ==> Q) <=> (!x. P x ==> Q)) <=>
#    (!x. P x ==> Q) ==> (?) P ==> Q
540
def
pop
540
ref
539
ref
# |- ((!x. P x ==> Q) /\ ((?) P ==> Q) <=> (!x. P x ==> Q)) <=>
#    (!x. P x ==> Q) ==> (?) P ==> Q
# |- (!x. P x ==> Q) /\ ((?) P ==> Q) <=> (!x. P x ==> Q)
eqMp
# |- (!x. P x ==> Q) ==> (?) P ==> Q
541
def
pop
"\\/"
"p"
1
ref
var
"q"
1
ref
var
415
ref
"r"
1
ref
var
237
ref
330
ref
appTerm
542
def
343
ref
312
ref
appTerm
543
def
appTerm
544
def
absTerm
545
def
appTerm
546
def
absTerm
547
def
absTerm
548
def
defineConst
549
def
pop
550
def
pop
549
ref
93
ref
app
551
def
pop
548
ref
2
ref
appTerm
552
def
betaConv
553
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
nil
cons
nil
cons
cons
553
ref
# |- (\p q. !r. (p ==> r) ==> (q ==> r) ==> r) p =
#    (\q. !r. (p ==> r) ==> (q ==> r) ==> r)
subst
# |- (\p q. !r. (p ==> r) ==> (q ==> r) ==> r) P =
#    (\q. !r. (P ==> r) ==> (q ==> r) ==> r)
554
def
pop
17
ref
550
ref
11
ref
constTerm
555
def
92
ref
appTerm
556
def
appTerm
557
def
refl
558
def
pop
558
ref
554
ref
app
559
def
pop
559
ref
551
ref
# |- (\/) P = (\p q. !r. (p ==> r) ==> (q ==> r) ==> r) P <=>
#    (\/) P = (\q. !r. (P ==> r) ==> (q ==> r) ==> r)
# |- (\/) P = (\p q. !r. (p ==> r) ==> (q ==> r) ==> r) P
eqMp
# |- (\/) P = (\q. !r. (P ==> r) ==> (q ==> r) ==> r)
560
def
pop
560
ref
102
ref
app
561
def
pop
"q"
1
ref
var
415
ref
"r"
1
ref
var
237
ref
237
ref
92
ref
appTerm
562
def
312
ref
appTerm
563
def
appTerm
564
def
543
ref
appTerm
565
def
absTerm
566
def
appTerm
567
def
absTerm
568
def
44
ref
appTerm
569
def
betaConv
570
def
pop
nil
"q"
1
ref
var
101
ref
nil
cons
cons
nil
cons
nil
cons
cons
570
ref
# |- (\q. !r. (P ==> r) ==> (q ==> r) ==> r) q <=>
#    (!r. (P ==> r) ==> (q ==> r) ==> r)
subst
# |- (\q. !r. (P ==> r) ==> (q ==> r) ==> r) Q <=>
#    (!r. (P ==> r) ==> (Q ==> r) ==> r)
571
def
pop
12
ref
556
ref
101
ref
appTerm
572
def
appTerm
573
def
refl
574
def
pop
574
ref
571
ref
app
575
def
pop
575
ref
561
ref
# |- (P \/ Q <=> (\q. !r. (P ==> r) ==> (q ==> r) ==> r) Q) <=>
#    P \/ Q <=>
#    (!r. (P ==> r) ==> (Q ==> r) ==> r)
# |- P \/ Q <=> (\q. !r. (P ==> r) ==> (q ==> r) ==> r) Q
eqMp
# |- P \/ Q <=> (!r. (P ==> r) ==> (Q ==> r) ==> r)
576
def
pop
92
ref
assume
577
def
pop
562
ref
26
ref
appTerm
578
def
assume
579
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
"q"
1
ref
var
26
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# P, P ==> t
# |- t
580
def
pop
579
ref
580
ref
deductAntisym
581
def
pop
577
ref
580
ref
deductAntisym
582
def
pop
237
ref
101
ref
appTerm
583
def
26
ref
appTerm
584
def
assume
585
def
pop
nil
"p"
1
ref
var
584
ref
nil
cons
cons
"q"
1
ref
var
26
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# t, Q ==> t
# |- (Q ==> t) /\ t
586
def
pop
585
ref
586
ref
deductAntisym
587
def
pop
580
ref
586
ref
deductAntisym
588
def
pop
588
ref
580
ref
# P, P ==> t, Q ==> t
# |- t <=> (Q ==> t) /\ t
# P, P ==> t
# |- t
eqMp
# P, P ==> t, Q ==> t
# |- (Q ==> t) /\ t
589
def
pop
80
ref
584
ref
appTerm
590
def
26
ref
appTerm
591
def
assume
592
def
pop
nil
"P"
1
ref
var
584
ref
nil
cons
cons
"Q"
1
ref
var
26
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (Q ==> t) /\ t
# |- Q ==> t
593
def
pop
592
ref
593
ref
deductAntisym
594
def
pop
589
ref
593
ref
deductAntisym
595
def
pop
nil
"p"
1
ref
var
584
ref
nil
cons
cons
"q"
1
ref
var
26
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((Q ==> t) /\ t <=> Q ==> t) <=> (Q ==> t) ==> t
596
def
pop
596
ref
595
ref
# |- ((Q ==> t) /\ t <=> Q ==> t) <=> (Q ==> t) ==> t
# P, P ==> t
# |- (Q ==> t) /\ t <=> Q ==> t
eqMp
# P, P ==> t
# |- (Q ==> t) ==> t
597
def
pop
nil
"p"
1
ref
var
578
ref
nil
cons
cons
"q"
1
ref
var
237
ref
584
ref
appTerm
598
def
26
ref
appTerm
599
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# P ==> t, (Q ==> t) ==> t
# |- (P ==> t) /\ ((Q ==> t) ==> t)
600
def
pop
579
ref
600
ref
deductAntisym
601
def
pop
597
ref
600
ref
deductAntisym
602
def
pop
602
ref
597
ref
# P, P ==> t
# |- (Q ==> t) ==> t <=> (P ==> t) /\ ((Q ==> t) ==> t)
# P, P ==> t
# |- (Q ==> t) ==> t
eqMp
# P, P ==> t
# |- (P ==> t) /\ ((Q ==> t) ==> t)
603
def
pop
80
ref
578
ref
appTerm
604
def
599
ref
appTerm
605
def
assume
606
def
pop
nil
"P"
1
ref
var
578
ref
nil
cons
cons
"Q"
1
ref
var
599
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (P ==> t) /\ ((Q ==> t) ==> t)
# |- P ==> t
607
def
pop
606
ref
607
ref
deductAntisym
608
def
pop
603
ref
607
ref
deductAntisym
609
def
pop
nil
"p"
1
ref
var
578
ref
nil
cons
cons
"q"
1
ref
var
599
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((P ==> t) /\ ((Q ==> t) ==> t) <=> P ==> t) <=>
#    (P ==> t) ==> (Q ==> t) ==> t
610
def
pop
610
ref
609
ref
# |- ((P ==> t) /\ ((Q ==> t) ==> t) <=> P ==> t) <=>
#    (P ==> t) ==> (Q ==> t) ==> t
# P
# |- (P ==> t) /\ ((Q ==> t) ==> t) <=> P ==> t
eqMp
# P
# |- (P ==> t) ==> (Q ==> t) ==> t
611
def
pop
nil
"P"
10
ref
var
"t"
1
ref
var
237
ref
578
ref
appTerm
612
def
599
ref
appTerm
613
def
absTerm
614
def
nil
cons
cons
nil
cons
nil
cons
cons
465
ref
# P = (\x. T)
# |- (!) P
subst
# (\t. (P ==> t) ==> (Q ==> t) ==> t) = (\x. T)
# |- !t. (P ==> t) ==> (Q ==> t) ==> t
615
def
pop
nil
"t"
1
ref
var
613
ref
nil
cons
cons
nil
cons
nil
cons
cons
37
ref
# |- t <=> t <=> T
subst
# |- (P ==> t) ==> (Q ==> t) ==> t <=> (P ==> t) ==> (Q ==> t) ==> t <=> T
616
def
pop
616
ref
611
ref
# |- (P ==> t) ==> (Q ==> t) ==> t <=> (P ==> t) ==> (Q ==> t) ==> t <=> T
# P
# |- (P ==> t) ==> (Q ==> t) ==> t
eqMp
# P
# |- (P ==> t) ==> (Q ==> t) ==> t <=> T
617
def
pop
"t"
1
ref
var
617
ref
abs
618
def
pop
618
ref
615
ref
deductAntisym
619
def
pop
619
ref
618
ref
# P
# |- (\t. (P ==> t) ==> (Q ==> t) ==> t) = (\t. T) <=>
#    (!t. (P ==> t) ==> (Q ==> t) ==> t)
# P
# |- (\t. (P ==> t) ==> (Q ==> t) ==> t) = (\t. T)
eqMp
# P
# |- !t. (P ==> t) ==> (Q ==> t) ==> t
620
def
pop
572
ref
refl
621
def
pop
13
ref
576
ref
app
622
def
pop
622
ref
621
ref
app
623
def
pop
623
ref
621
ref
# |- (P \/ Q <=> P \/ Q) <=> (!r. (P ==> r) ==> (Q ==> r) ==> r) <=> P \/ Q
# |- P \/ Q <=> P \/ Q
eqMp
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r) <=> P \/ Q
624
def
pop
624
ref
620
ref
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r) <=> P \/ Q
# P
# |- !t. (P ==> t) ==> (Q ==> t) ==> t
eqMp
# P
# |- P \/ Q
625
def
pop
101
ref
assume
626
def
pop
nil
"p"
1
ref
var
101
ref
nil
cons
cons
"q"
1
ref
var
26
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# Q, Q ==> t
# |- t
627
def
pop
585
ref
627
ref
deductAntisym
628
def
pop
626
ref
627
ref
deductAntisym
629
def
pop
627
ref
586
ref
deductAntisym
630
def
pop
630
ref
627
ref
# Q, Q ==> t
# |- t <=> (Q ==> t) /\ t
# Q, Q ==> t
# |- t
eqMp
# Q, Q ==> t
# |- (Q ==> t) /\ t
631
def
pop
631
ref
593
ref
deductAntisym
632
def
pop
596
ref
632
ref
# |- ((Q ==> t) /\ t <=> Q ==> t) <=> (Q ==> t) ==> t
# Q
# |- (Q ==> t) /\ t <=> Q ==> t
eqMp
# Q
# |- (Q ==> t) ==> t
633
def
pop
633
ref
600
ref
deductAntisym
634
def
pop
634
ref
633
ref
# Q, P ==> t
# |- (Q ==> t) ==> t <=> (P ==> t) /\ ((Q ==> t) ==> t)
# Q
# |- (Q ==> t) ==> t
eqMp
# Q, P ==> t
# |- (P ==> t) /\ ((Q ==> t) ==> t)
635
def
pop
635
ref
607
ref
deductAntisym
636
def
pop
610
ref
636
ref
# |- ((P ==> t) /\ ((Q ==> t) ==> t) <=> P ==> t) <=>
#    (P ==> t) ==> (Q ==> t) ==> t
# Q
# |- (P ==> t) /\ ((Q ==> t) ==> t) <=> P ==> t
eqMp
# Q
# |- (P ==> t) ==> (Q ==> t) ==> t
637
def
pop
616
ref
637
ref
# |- (P ==> t) ==> (Q ==> t) ==> t <=> (P ==> t) ==> (Q ==> t) ==> t <=> T
# Q
# |- (P ==> t) ==> (Q ==> t) ==> t
eqMp
# Q
# |- (P ==> t) ==> (Q ==> t) ==> t <=> T
638
def
pop
"t"
1
ref
var
638
ref
abs
639
def
pop
639
ref
615
ref
deductAntisym
640
def
pop
640
ref
639
ref
# Q
# |- (\t. (P ==> t) ==> (Q ==> t) ==> t) = (\t. T) <=>
#    (!t. (P ==> t) ==> (Q ==> t) ==> t)
# Q
# |- (\t. (P ==> t) ==> (Q ==> t) ==> t) = (\t. T)
eqMp
# Q
# |- !t. (P ==> t) ==> (Q ==> t) ==> t
641
def
pop
624
ref
641
ref
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r) <=> P \/ Q
# Q
# |- !t. (P ==> t) ==> (Q ==> t) ==> t
eqMp
# Q
# |- P \/ Q
642
def
pop
572
ref
assume
643
def
pop
576
ref
643
ref
# |- P \/ Q <=> (!r. (P ==> r) ==> (Q ==> r) ==> r)
# P \/ Q
# |- P \/ Q
eqMp
# P \/ Q
# |- !r. (P ==> r) ==> (Q ==> r) ==> r
644
def
pop
nil
"P"
10
ref
var
"r"
1
ref
var
564
ref
237
ref
583
ref
312
ref
appTerm
645
def
appTerm
646
def
312
ref
appTerm
647
def
appTerm
648
def
absTerm
649
def
nil
cons
cons
"x"
1
ref
var
"R"
1
ref
var
varTerm
650
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
502
ref
# |- (!) P ==> P x
subst
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r)
#    ==> (\r. (P ==> r) ==> (Q ==> r) ==> r) R
651
def
pop
nil
"p"
1
ref
var
415
ref
649
ref
appTerm
652
def
nil
cons
cons
"q"
1
ref
var
649
ref
650
ref
appTerm
653
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# !r. (P ==> r) ==> (Q ==> r) ==> r,
# (!r. (P ==> r) ==> (Q ==> r) ==> r) ==> (\r. (P ==> r) ==> (Q ==> r) ==> r) R
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) R
654
def
pop
651
ref
654
ref
deductAntisym
655
def
pop
655
ref
651
ref
# !r. (P ==> r) ==> (Q ==> r) ==> r
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r)
#    ==> (\r. (P ==> r) ==> (Q ==> r) ==> r) R <=>
#    (\r. (P ==> r) ==> (Q ==> r) ==> r) R
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r)
#    ==> (\r. (P ==> r) ==> (Q ==> r) ==> r) R
eqMp
# !r. (P ==> r) ==> (Q ==> r) ==> r
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) R
656
def
pop
644
ref
656
ref
deductAntisym
657
def
pop
657
ref
644
ref
# P \/ Q
# |- (!r. (P ==> r) ==> (Q ==> r) ==> r) <=>
#    (\r. (P ==> r) ==> (Q ==> r) ==> r) R
# P \/ Q
# |- !r. (P ==> r) ==> (Q ==> r) ==> r
eqMp
# P \/ Q
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) R
658
def
pop
649
ref
312
ref
appTerm
659
def
betaConv
660
def
pop
nil
"r"
1
ref
var
650
ref
nil
cons
cons
nil
cons
nil
cons
cons
660
ref
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) r <=> (P ==> r) ==> (Q ==> r) ==> r
subst
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) R <=> (P ==> R) ==> (Q ==> R) ==> R
661
def
pop
661
ref
658
ref
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) R <=> (P ==> R) ==> (Q ==> R) ==> R
# P \/ Q
# |- (\r. (P ==> r) ==> (Q ==> r) ==> r) R
eqMp
# P \/ Q
# |- (P ==> R) ==> (Q ==> R) ==> R
662
def
pop
562
ref
650
ref
appTerm
663
def
assume
664
def
pop
nil
"p"
1
ref
var
663
ref
nil
cons
cons
"q"
1
ref
var
237
ref
583
ref
650
ref
appTerm
665
def
appTerm
666
def
650
ref
appTerm
667
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# P ==> R, (P ==> R) ==> (Q ==> R) ==> R
# |- (Q ==> R) ==> R
668
def
pop
662
ref
668
ref
deductAntisym
669
def
pop
669
ref
662
ref
# P ==> R, P \/ Q
# |- (P ==> R) ==> (Q ==> R) ==> R <=> (Q ==> R) ==> R
# P \/ Q
# |- (P ==> R) ==> (Q ==> R) ==> R
eqMp
# P ==> R, P \/ Q
# |- (Q ==> R) ==> R
670
def
pop
664
ref
670
ref
deductAntisym
671
def
pop
665
ref
assume
672
def
pop
nil
"p"
1
ref
var
665
ref
nil
cons
cons
"q"
1
ref
var
650
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# Q ==> R, (Q ==> R) ==> R
# |- R
673
def
pop
670
ref
673
ref
deductAntisym
674
def
pop
674
ref
670
ref
# P ==> R, Q ==> R, P \/ Q
# |- (Q ==> R) ==> R <=> R
# P ==> R, P \/ Q
# |- (Q ==> R) ==> R
eqMp
# P ==> R, Q ==> R, P \/ Q
# |- R
675
def
pop
672
ref
675
ref
deductAntisym
676
def
pop
"F"
415
ref
3
ref
appTerm
677
def
defineConst
678
def
pop
679
def
pop
"~"
"p"
1
ref
var
238
ref
679
ref
1
ref
constTerm
680
def
appTerm
681
def
absTerm
682
def
defineConst
683
def
pop
684
def
pop
683
ref
93
ref
app
685
def
pop
682
ref
2
ref
appTerm
686
def
betaConv
687
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
nil
cons
nil
cons
cons
687
ref
# |- (\p. p ==> F) p <=> p ==> F
subst
# |- (\p. p ==> F) P <=> P ==> F
688
def
pop
12
ref
684
ref
10
ref
constTerm
689
def
92
ref
appTerm
690
def
appTerm
691
def
refl
692
def
pop
692
ref
688
ref
app
693
def
pop
693
ref
685
ref
# |- (~P <=> (\p. p ==> F) P) <=> ~P <=> P ==> F
# |- ~P <=> (\p. p ==> F) P
eqMp
# |- ~P <=> P ==> F
694
def
pop
690
ref
refl
695
def
pop
13
ref
694
ref
app
696
def
pop
696
ref
695
ref
app
697
def
pop
697
ref
695
ref
# |- (~P <=> ~P) <=> P ==> F <=> ~P
# |- ~P <=> ~P
eqMp
# |- P ==> F <=> ~P
698
def
pop
690
ref
assume
699
def
pop
694
ref
699
ref
# |- ~P <=> P ==> F
# ~P
# |- ~P
eqMp
# ~P
# |- P ==> F
700
def
pop
680
ref
assume
701
def
pop
678
ref
701
ref
# |- F <=> (!p. p)
# F
# |- F
eqMp
# F
# |- !p. p
702
def
pop
nil
"P"
10
ref
var
3
ref
nil
cons
cons
"x"
1
ref
var
92
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
502
ref
# |- (!) P ==> P x
subst
# |- (!p. p) ==> (\p. p) P
703
def
pop
nil
"p"
1
ref
var
677
ref
nil
cons
cons
"q"
1
ref
var
3
ref
92
ref
appTerm
704
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# !p. p, (!p. p) ==> (\p. p) P
# |- (\p. p) P
705
def
pop
703
ref
705
ref
deductAntisym
706
def
pop
706
ref
703
ref
# !p. p
# |- (!p. p) ==> (\p. p) P <=> (\p. p) P
# |- (!p. p) ==> (\p. p) P
eqMp
# !p. p
# |- (\p. p) P
707
def
pop
702
ref
707
ref
deductAntisym
708
def
pop
708
ref
702
ref
# F
# |- (!p. p) <=> (\p. p) P
# F
# |- !p. p
eqMp
# F
# |- (\p. p) P
709
def
pop
3
ref
2
ref
appTerm
710
def
betaConv
711
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
nil
cons
nil
cons
cons
711
ref
# |- (\p. p) p <=> p
subst
# |- (\p. p) P <=> P
712
def
pop
712
ref
709
ref
# |- (\p. p) P <=> P
# F
# |- (\p. p) P
eqMp
# F
# |- P
713
def
pop
nil
"p"
1
ref
var
680
ref
nil
cons
cons
"q"
1
ref
var
92
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# F, P
# |- F /\ P
714
def
pop
701
ref
714
ref
deductAntisym
715
def
pop
713
ref
714
ref
deductAntisym
716
def
pop
716
ref
713
ref
# F
# |- P <=> F /\ P
# F
# |- P
eqMp
# F
# |- F /\ P
717
def
pop
80
ref
680
ref
appTerm
718
def
92
ref
appTerm
719
def
assume
720
def
pop
nil
"P"
1
ref
var
680
ref
nil
cons
cons
"Q"
1
ref
var
92
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# F /\ P
# |- F
721
def
pop
720
ref
721
ref
deductAntisym
722
def
pop
717
ref
721
ref
deductAntisym
723
def
pop
nil
"p"
1
ref
var
680
ref
nil
cons
cons
"q"
1
ref
var
92
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- (F /\ P <=> F) <=> F ==> P
724
def
pop
724
ref
723
ref
# |- (F /\ P <=> F) <=> F ==> P
# |- F /\ P <=> F
eqMp
# |- F ==> P
725
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
"q"
1
ref
var
680
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# P, P ==> F
# |- F
726
def
pop
700
ref
726
ref
deductAntisym
727
def
pop
727
ref
700
ref
# P, ~P
# |- P ==> F <=> F
# ~P
# |- P ==> F
eqMp
# P, ~P
# |- F
728
def
pop
577
ref
728
ref
deductAntisym
729
def
pop
nil
"p"
1
ref
var
680
ref
nil
cons
cons
"q"
1
ref
var
92
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# F, F ==> P
# |- P
730
def
pop
725
ref
730
ref
deductAntisym
731
def
pop
701
ref
713
ref
deductAntisym
732
def
pop
713
ref
728
ref
deductAntisym
733
def
pop
nil
"p"
1
ref
var
690
ref
nil
cons
cons
"q"
1
ref
var
12
ref
92
ref
appTerm
734
def
680
ref
appTerm
735
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# ~P, P <=> F
# |- ~P /\ (P <=> F)
736
def
pop
699
ref
736
ref
deductAntisym
737
def
pop
733
ref
736
ref
deductAntisym
738
def
pop
738
ref
733
ref
# ~P
# |- (P <=> F) <=> ~P /\ (P <=> F)
# ~P
# |- P <=> F
eqMp
# ~P
# |- ~P /\ (P <=> F)
739
def
pop
80
ref
690
ref
appTerm
740
def
735
ref
appTerm
741
def
assume
742
def
pop
nil
"P"
1
ref
var
690
ref
nil
cons
cons
"Q"
1
ref
var
735
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# ~P /\ (P <=> F)
# |- ~P
743
def
pop
742
ref
743
ref
deductAntisym
744
def
pop
739
ref
743
ref
deductAntisym
745
def
pop
nil
"p"
1
ref
var
690
ref
nil
cons
cons
"q"
1
ref
var
735
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- (~P /\ (P <=> F) <=> ~P) <=> ~P ==> (P <=> F)
746
def
pop
746
ref
745
ref
# |- (~P /\ (P <=> F) <=> ~P) <=> ~P ==> (P <=> F)
# |- ~P /\ (P <=> F) <=> ~P
eqMp
# |- ~P ==> (P <=> F)
747
def
pop
735
ref
assume
748
def
pop
748
ref
577
ref
# P <=> F
# |- P <=> F
# P
# |- P
eqMp
# P, P <=> F
# |- F
749
def
pop
678
ref
749
ref
# |- F <=> (!p. p)
# P, P <=> F
# |- F
eqMp
# P, P <=> F
# |- !p. p
750
def
pop
nil
"P"
10
ref
var
3
ref
nil
cons
cons
"x"
1
ref
var
680
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
502
ref
# |- (!) P ==> P x
subst
# |- (!p. p) ==> (\p. p) F
751
def
pop
nil
"p"
1
ref
var
677
ref
nil
cons
cons
"q"
1
ref
var
3
ref
680
ref
appTerm
752
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# !p. p, (!p. p) ==> (\p. p) F
# |- (\p. p) F
753
def
pop
751
ref
753
ref
deductAntisym
754
def
pop
754
ref
751
ref
# !p. p
# |- (!p. p) ==> (\p. p) F <=> (\p. p) F
# |- (!p. p) ==> (\p. p) F
eqMp
# !p. p
# |- (\p. p) F
755
def
pop
750
ref
755
ref
deductAntisym
756
def
pop
756
ref
750
ref
# P, P <=> F
# |- (!p. p) <=> (\p. p) F
# P, P <=> F
# |- !p. p
eqMp
# P, P <=> F
# |- (\p. p) F
757
def
pop
nil
"p"
1
ref
var
680
ref
nil
cons
cons
nil
cons
nil
cons
cons
711
ref
# |- (\p. p) p <=> p
subst
# |- (\p. p) F <=> F
758
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
"q"
1
ref
var
680
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# F, P
# |- P /\ F
759
def
pop
577
ref
759
ref
deductAntisym
760
def
pop
749
ref
759
ref
deductAntisym
761
def
pop
761
ref
749
ref
# P, P <=> F
# |- F <=> P /\ F
# P, P <=> F
# |- F
eqMp
# P, P <=> F
# |- P /\ F
762
def
pop
96
ref
680
ref
appTerm
763
def
assume
764
def
pop
nil
"P"
1
ref
var
92
ref
nil
cons
cons
"Q"
1
ref
var
680
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# P /\ F
# |- P
765
def
pop
764
ref
765
ref
deductAntisym
766
def
pop
762
ref
765
ref
deductAntisym
767
def
pop
nil
"p"
1
ref
var
92
ref
nil
cons
cons
"q"
1
ref
var
680
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- (P /\ F <=> P) <=> P ==> F
768
def
pop
768
ref
767
ref
# |- (P /\ F <=> P) <=> P ==> F
# P <=> F
# |- P /\ F <=> P
eqMp
# P <=> F
# |- P ==> F
769
def
pop
698
ref
769
ref
# |- P ==> F <=> ~P
# P <=> F
# |- P ==> F
eqMp
# P <=> F
# |- ~P
770
def
pop
nil
"p"
1
ref
var
735
ref
nil
cons
cons
"q"
1
ref
var
690
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# ~P, P <=> F
# |- (P <=> F) /\ ~P
771
def
pop
748
ref
771
ref
deductAntisym
772
def
pop
770
ref
771
ref
deductAntisym
773
def
pop
773
ref
770
ref
# P <=> F
# |- ~P <=> (P <=> F) /\ ~P
# P <=> F
# |- ~P
eqMp
# P <=> F
# |- (P <=> F) /\ ~P
774
def
pop
80
ref
735
ref
appTerm
775
def
690
ref
appTerm
776
def
assume
777
def
pop
nil
"P"
1
ref
var
735
ref
nil
cons
cons
"Q"
1
ref
var
690
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (P <=> F) /\ ~P
# |- P <=> F
778
def
pop
777
ref
778
ref
deductAntisym
779
def
pop
774
ref
778
ref
deductAntisym
780
def
pop
nil
"p"
1
ref
var
735
ref
nil
cons
cons
"q"
1
ref
var
690
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((P <=> F) /\ ~P <=> P <=> F) <=> (P <=> F) ==> ~P
781
def
pop
781
ref
780
ref
# |- ((P <=> F) /\ ~P <=> P <=> F) <=> (P <=> F) ==> ~P
# |- (P <=> F) /\ ~P <=> P <=> F
eqMp
# |- (P <=> F) ==> ~P
782
def
pop
"?!"
"P"
358
ref
var
522
ref
369
ref
"x"
357
ref
var
369
ref
"y"
357
ref
var
237
ref
80
ref
383
ref
appTerm
783
def
362
ref
"y"
357
ref
var
varTerm
784
def
appTerm
785
def
appTerm
786
def
appTerm
787
def
8
ref
9
ref
357
ref
358
ref
nil
cons
cons
opType
788
def
constTerm
789
def
378
ref
appTerm
790
def
784
ref
appTerm
791
def
appTerm
792
def
absTerm
793
def
appTerm
794
def
absTerm
795
def
appTerm
796
def
appTerm
797
def
absTerm
798
def
defineConst
799
def
pop
800
def
pop
799
ref
372
ref
app
801
def
pop
798
ref
362
ref
appTerm
802
def
betaConv
803
def
pop
12
ref
800
ref
359
ref
constTerm
804
def
362
ref
appTerm
805
def
appTerm
806
def
refl
807
def
pop
807
ref
803
ref
app
808
def
pop
808
ref
801
ref
# |- ((?!) P <=> (\P. (?) P /\ (!x y. P x /\ P y ==> x = y)) P) <=>
#    (?!) P <=>
#    (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?!) P <=> (\P. (?) P /\ (!x y. P x /\ P y ==> x = y)) P
eqMp
# |- (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
809
def
pop
nil
"p"
1
ref
var
805
ref
nil
cons
cons
"q"
1
ref
var
797
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
309
ref
# |- (p <=> q) ==> q ==> p
subst
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
#    ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
#    ==> (?!) P
810
def
pop
nil
"p"
1
ref
var
806
ref
797
ref
appTerm
811
def
nil
cons
cons
"q"
1
ref
var
237
ref
797
ref
appTerm
812
def
805
ref
appTerm
813
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y),
# ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
# ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
# ==> (?!) P
# |- (?) P /\ (!x y. P x /\ P y ==> x = y) ==> (?!) P
814
def
pop
810
ref
814
ref
deductAntisym
815
def
pop
815
ref
810
ref
# (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
#    ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
#    ==> (?!) P <=>
#    (?) P /\ (!x y. P x /\ P y ==> x = y) ==> (?!) P
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
#    ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
#    ==> (?!) P
eqMp
# (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?) P /\ (!x y. P x /\ P y ==> x = y) ==> (?!) P
816
def
pop
809
ref
816
ref
deductAntisym
817
def
pop
817
ref
809
ref
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)) <=>
#    (?) P /\ (!x y. P x /\ P y ==> x = y) ==> (?!) P
# |- (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
eqMp
# |- (?) P /\ (!x y. P x /\ P y ==> x = y) ==> (?!) P
818
def
pop
nil
"p"
1
ref
var
805
ref
nil
cons
cons
"q"
1
ref
var
797
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
280
ref
# |- (p <=> q) ==> p ==> q
subst
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
#    ==> (?!) P
#    ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
819
def
pop
nil
"p"
1
ref
var
811
ref
nil
cons
cons
"q"
1
ref
var
237
ref
805
ref
appTerm
820
def
797
ref
appTerm
821
def
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y),
# ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
# ==> (?!) P
# ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
822
def
pop
819
ref
822
ref
deductAntisym
823
def
pop
823
ref
819
ref
# (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
#    ==> (?!) P
#    ==> (?) P /\ (!x y. P x /\ P y ==> x = y) <=>
#    (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y))
#    ==> (?!) P
#    ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
eqMp
# (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
824
def
pop
809
ref
824
ref
deductAntisym
825
def
pop
825
ref
809
ref
# |- ((?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)) <=>
#    (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?!) P <=> (?) P /\ (!x y. P x /\ P y ==> x = y)
eqMp
# |- (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
826
def
pop
805
ref
assume
827
def
pop
nil
"p"
1
ref
var
805
ref
nil
cons
cons
"q"
1
ref
var
797
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
252
ref
# p, p ==> q
# |- q
subst
# (?!) P, (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?) P /\ (!x y. P x /\ P y ==> x = y)
828
def
pop
826
ref
828
ref
deductAntisym
829
def
pop
829
ref
826
ref
# (?!) P
# |- (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y) <=>
#    (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?!) P ==> (?) P /\ (!x y. P x /\ P y ==> x = y)
eqMp
# (?!) P
# |- (?) P /\ (!x y. P x /\ P y ==> x = y)
830
def
pop
827
ref
830
ref
deductAntisym
831
def
pop
nil
"P"
1
ref
var
431
ref
nil
cons
cons
"Q"
1
ref
var
796
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (?) P /\ (!x y. P x /\ P y ==> x = y)
# |- (?) P
832
def
pop
830
ref
832
ref
deductAntisym
833
def
pop
833
ref
830
ref
# (?!) P
# |- (?) P /\ (!x y. P x /\ P y ==> x = y) <=> (?) P
# (?!) P
# |- (?) P /\ (!x y. P x /\ P y ==> x = y)
eqMp
# (?!) P
# |- (?) P
834
def
pop
nil
"p"
1
ref
var
805
ref
nil
cons
cons
"q"
1
ref
var
431
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
91
ref
# p, q
# |- p /\ q
subst
# (?) P, (?!) P
# |- (?!) P /\ (?) P
835
def
pop
827
ref
835
ref
deductAntisym
836
def
pop
834
ref
835
ref
deductAntisym
837
def
pop
837
ref
834
ref
# (?!) P
# |- (?) P <=> (?!) P /\ (?) P
# (?!) P
# |- (?) P
eqMp
# (?!) P
# |- (?!) P /\ (?) P
838
def
pop
80
ref
805
ref
appTerm
839
def
431
ref
appTerm
840
def
assume
841
def
pop
nil
"P"
1
ref
var
805
ref
nil
cons
cons
"Q"
1
ref
var
431
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
174
ref
# P /\ Q
# |- P
subst
# (?!) P /\ (?) P
# |- (?!) P
842
def
pop
841
ref
842
ref
deductAntisym
843
def
pop
838
ref
842
ref
deductAntisym
844
def
pop
nil
"p"
1
ref
var
805
ref
nil
cons
cons
"q"
1
ref
var
431
ref
nil
cons
cons
nil
cons
cons
nil
cons
cons
256
ref
# |- (p /\ q <=> p) <=> p ==> q
subst
# |- ((?!) P /\ (?) P <=> (?!) P) <=> (?!) P ==> (?) P
845
def
pop
845
ref
844
ref
# |- ((?!) P /\ (?) P <=> (?!) P) <=> (?!) P ==> (?) P
# |- (?!) P /\ (?) P <=> (?!) P
eqMp
# |- (?!) P ==> (?) P
846
def
pop
