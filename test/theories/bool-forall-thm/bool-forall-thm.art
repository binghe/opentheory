nil
"P"
"->"
typeOp
0
def
"A"
varType
1
def
"bool"
typeOp
nil
opType
2
def
nil
cons
3
def
cons
opType
4
def
var
5
def
"x"
1
remove
var
6
def
"Data.Bool.T"
const
2
ref
constTerm
7
def
absTerm
8
def
nil
cons
cons
nil
cons
nil
cons
cons
"="
const
9
def
0
ref
2
ref
0
ref
2
ref
3
ref
cons
opType
nil
cons
cons
opType
constTerm
10
def
refl
11
def
10
ref
"Data.Bool.!"
const
0
ref
4
ref
3
ref
cons
opType
12
def
constTerm
13
def
5
remove
varTerm
14
def
appTerm
15
def
appTerm
refl
nil
"p"
4
ref
var
16
def
14
ref
nil
cons
cons
nil
cons
nil
cons
cons
16
ref
9
ref
0
ref
4
remove
12
ref
nil
cons
cons
opType
constTerm
16
remove
varTerm
17
def
appTerm
8
ref
appTerm
absTerm
18
def
17
remove
appTerm
betaConv
subst
appThm
nil
9
remove
0
ref
12
ref
0
remove
12
remove
3
remove
cons
opType
nil
cons
cons
opType
constTerm
13
ref
appTerm
18
remove
appTerm
axiom
14
remove
refl
appThm
eqMp
appThm
15
remove
refl
19
def
appThm
19
remove
eqMp
subst
6
remove
nil
"t"
2
remove
var
20
def
7
ref
nil
cons
cons
nil
cons
nil
cons
cons
11
remove
10
remove
20
remove
varTerm
21
def
appTerm
7
ref
appTerm
assume
appThm
21
ref
refl
22
def
appThm
22
remove
eqMp
nil
7
remove
axiom
23
def
eqMp
21
remove
assume
23
ref
deductAntisym
deductAntisym
subst
23
remove
eqMp
absThm
eqMp
nil
13
remove
8
remove
appTerm
thm
