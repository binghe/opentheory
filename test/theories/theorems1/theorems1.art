"c1"
"f"
"->"
typeOp
0
def
"A"
varType
1
def
"B"
varType
nil
cons
2
def
cons
3
def
opType
4
def
var
5
def
"x"
1
ref
var
6
def
5
remove
varTerm
6
remove
varTerm
7
def
appTerm
absTerm
absTerm
8
def
defineConst
9
def
pop
10
def
pop
9
remove
nil
"="
const
11
def
0
ref
0
ref
4
ref
4
remove
nil
cons
cons
opType
12
def
0
ref
12
ref
"bool"
typeOp
nil
opType
13
def
nil
cons
14
def
cons
opType
nil
cons
cons
opType
constTerm
10
remove
12
remove
constTerm
appTerm
8
remove
appTerm
thm
"t1"
"a1"
"r1"
"A"
nil
cons
11
ref
0
ref
13
ref
0
ref
13
ref
14
ref
cons
opType
nil
cons
cons
opType
constTerm
15
def
refl
16
def
15
ref
"l"
"Data.List.list"
typeOp
17
def
1
ref
nil
cons
18
def
opType
19
def
var
20
def
11
ref
0
ref
"Number.Natural.natural"
typeOp
nil
opType
21
def
0
ref
21
ref
14
ref
cons
opType
nil
cons
cons
opType
constTerm
22
def
"Data.List.length"
const
23
def
0
ref
19
ref
21
ref
nil
cons
24
def
cons
opType
constTerm
25
def
20
ref
varTerm
26
def
appTerm
appTerm
27
def
"Number.Natural.zero"
const
21
ref
constTerm
28
def
appTerm
absTerm
29
def
"Data.List.[]"
const
30
def
19
ref
constTerm
31
def
appTerm
32
def
appTerm
refl
15
ref
22
ref
25
remove
31
ref
appTerm
appTerm
33
def
28
ref
appTerm
34
def
appTerm
refl
nil
"x"
21
remove
var
28
ref
nil
cons
cons
nil
cons
nil
cons
cons
"A"
24
ref
cons
nil
cons
nil
nil
cons
35
def
cons
nil
"t"
13
ref
var
36
def
11
ref
0
ref
1
ref
0
ref
1
remove
14
ref
cons
opType
nil
cons
cons
opType
constTerm
7
ref
appTerm
7
ref
appTerm
nil
cons
cons
nil
cons
nil
cons
cons
16
ref
15
ref
36
remove
varTerm
37
def
appTerm
"Data.Bool.T"
const
13
remove
constTerm
38
def
appTerm
assume
appThm
37
ref
refl
39
def
appThm
39
remove
eqMp
nil
38
remove
axiom
40
def
eqMp
37
remove
assume
40
ref
deductAntisym
deductAntisym
subst
7
remove
refl
eqMp
subst
subst
41
def
appThm
22
remove
refl
nil
34
remove
axiom
42
def
appThm
43
def
28
remove
refl
appThm
eqMp
appThm
nil
20
ref
31
ref
nil
cons
cons
nil
cons
nil
cons
cons
44
def
29
ref
26
ref
appTerm
betaConv
subst
eqMp
appThm
32
remove
refl
45
def
appThm
45
remove
eqMp
40
ref
eqMp
defineTypeOp
46
def
pop
47
def
pop
48
def
pop
49
def
pop
50
def
pop
47
remove
nil
11
ref
0
ref
50
remove
18
remove
opType
51
def
0
ref
51
ref
14
ref
cons
opType
nil
cons
cons
opType
constTerm
49
remove
0
ref
19
ref
51
ref
nil
cons
cons
opType
constTerm
52
def
48
remove
0
ref
51
ref
19
ref
nil
cons
53
def
cons
opType
constTerm
54
def
"a"
51
remove
var
varTerm
55
def
appTerm
appTerm
appTerm
55
remove
appTerm
thm
46
remove
nil
15
ref
29
remove
"r"
19
ref
var
varTerm
56
def
appTerm
appTerm
11
ref
0
ref
19
ref
0
ref
19
ref
14
ref
cons
opType
nil
cons
cons
opType
constTerm
57
def
54
remove
52
remove
56
ref
appTerm
appTerm
appTerm
56
ref
appTerm
appTerm
thm
"t2"
"a2"
"r2"
"A"
"B"
nil
cons
cons
16
remove
15
ref
20
remove
27
remove
23
remove
0
ref
17
remove
2
ref
opType
58
def
24
remove
cons
opType
constTerm
30
remove
58
remove
constTerm
appTerm
59
def
appTerm
absTerm
60
def
31
remove
appTerm
61
def
appTerm
refl
15
ref
33
remove
59
remove
appTerm
appTerm
refl
41
remove
appThm
43
remove
"A"
2
remove
cons
nil
cons
35
remove
cons
42
remove
subst
appThm
eqMp
appThm
44
remove
60
ref
26
remove
appTerm
betaConv
subst
eqMp
appThm
61
remove
refl
62
def
appThm
62
remove
eqMp
40
remove
eqMp
defineTypeOp
63
def
pop
64
def
pop
65
def
pop
66
def
pop
67
def
pop
64
remove
nil
11
remove
0
ref
67
remove
3
remove
opType
68
def
0
ref
68
ref
14
remove
cons
opType
nil
cons
cons
opType
constTerm
66
remove
0
ref
19
remove
68
ref
nil
cons
cons
opType
constTerm
69
def
65
remove
0
remove
68
ref
53
remove
cons
opType
constTerm
70
def
"a"
68
remove
var
varTerm
71
def
appTerm
appTerm
appTerm
71
remove
appTerm
thm
63
remove
nil
15
remove
60
remove
56
ref
appTerm
appTerm
57
remove
70
remove
69
remove
56
ref
appTerm
appTerm
appTerm
56
remove
appTerm
appTerm
thm
